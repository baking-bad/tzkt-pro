{"swagger":"2.0","info":{"version":"7.0.1 (UNKNOWN)","title":"PostgREST API","description":"This is a dynamic API generated by PostgREST"},"host":"0.0.0.0:3000","basePath":"/","schemes":["http"],"consumes":["application/json","application/vnd.pgrst.object+json","text/csv"],"produces":["application/json","application/vnd.pgrst.object+json","text/csv"],"paths":{"/":{"get":{"tags":["Introspection"],"summary":"OpenAPI description (this document)","produces":["application/openapi+json","application/json"],"responses":{"200":{"description":"OK"}}}},"/activations":{"get":{"tags":["activations"],"summary":"Used to activate accounts that were recommended allocations of tezos tokens for donations to the Tezos Foundationâ€™s fundraiser","parameters":[{"$ref":"#/parameters/rowFilter.activations.level"},{"$ref":"#/parameters/rowFilter.activations.timestamp"},{"$ref":"#/parameters/rowFilter.activations.hash"},{"$ref":"#/parameters/rowFilter.activations.account_id"},{"$ref":"#/parameters/rowFilter.activations.account"},{"$ref":"#/parameters/rowFilter.activations.balance"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/activations"},"type":"array"},"description":"OK"}}}},"/balance_snapshots":{"get":{"tags":["balance_snapshots"],"parameters":[{"$ref":"#/parameters/rowFilter.balance_snapshots.cycle"},{"$ref":"#/parameters/rowFilter.balance_snapshots.delegator_id"},{"$ref":"#/parameters/rowFilter.balance_snapshots.delegator"},{"$ref":"#/parameters/rowFilter.balance_snapshots.baker_id"},{"$ref":"#/parameters/rowFilter.balance_snapshots.baker"},{"$ref":"#/parameters/rowFilter.balance_snapshots.balance"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/balance_snapshots"},"type":"array"},"description":"OK"}}}},"/ballots":{"get":{"tags":["ballots"],"summary":"Used to vote for a proposal in a given voting cycle","parameters":[{"$ref":"#/parameters/rowFilter.ballots.level"},{"$ref":"#/parameters/rowFilter.ballots.timestamp"},{"$ref":"#/parameters/rowFilter.ballots.hash"},{"$ref":"#/parameters/rowFilter.ballots.period_id"},{"$ref":"#/parameters/rowFilter.ballots.voting_period"},{"$ref":"#/parameters/rowFilter.ballots.proposal_id"},{"$ref":"#/parameters/rowFilter.ballots.proposal"},{"$ref":"#/parameters/rowFilter.ballots.baker_id"},{"$ref":"#/parameters/rowFilter.ballots.baker"},{"$ref":"#/parameters/rowFilter.ballots.num_rolls"},{"$ref":"#/parameters/rowFilter.ballots.vote"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/ballots"},"type":"array"},"description":"OK"}}}},"/blocks":{"get":{"tags":["blocks"],"parameters":[{"$ref":"#/parameters/rowFilter.blocks.level"},{"$ref":"#/parameters/rowFilter.blocks.hash"},{"$ref":"#/parameters/rowFilter.blocks.timestamp"},{"$ref":"#/parameters/rowFilter.blocks.proto_code"},{"$ref":"#/parameters/rowFilter.blocks.priority"},{"$ref":"#/parameters/rowFilter.blocks.num_endorsements"},{"$ref":"#/parameters/rowFilter.blocks.is_cycle_start"},{"$ref":"#/parameters/rowFilter.blocks.is_cycle_end"},{"$ref":"#/parameters/rowFilter.blocks.is_protocol_start"},{"$ref":"#/parameters/rowFilter.blocks.is_protocol_end"},{"$ref":"#/parameters/rowFilter.blocks.is_voting_period_start"},{"$ref":"#/parameters/rowFilter.blocks.is_voring_period_end"},{"$ref":"#/parameters/rowFilter.blocks.has_deactivations"},{"$ref":"#/parameters/rowFilter.blocks.has_account_allocations"},{"$ref":"#/parameters/rowFilter.blocks.has_smart_contract_interaction"},{"$ref":"#/parameters/rowFilter.blocks.is_snapshot"},{"$ref":"#/parameters/rowFilter.blocks.has_delegator_contract_interaction"},{"$ref":"#/parameters/rowFilter.blocks.has_ballots"},{"$ref":"#/parameters/rowFilter.blocks.has_proposals"},{"$ref":"#/parameters/rowFilter.blocks.has_activations"},{"$ref":"#/parameters/rowFilter.blocks.has_double_bakings"},{"$ref":"#/parameters/rowFilter.blocks.has_double_endorsings"},{"$ref":"#/parameters/rowFilter.blocks.has_revelations"},{"$ref":"#/parameters/rowFilter.blocks.has_transactions"},{"$ref":"#/parameters/rowFilter.blocks.has_reveals"},{"$ref":"#/parameters/rowFilter.blocks.has_migrations"},{"$ref":"#/parameters/rowFilter.blocks.has_revelations_penalties"},{"$ref":"#/parameters/rowFilter.blocks.reward"},{"$ref":"#/parameters/rowFilter.blocks.fees"},{"$ref":"#/parameters/rowFilter.blocks.baker_id"},{"$ref":"#/parameters/rowFilter.blocks.baker"},{"$ref":"#/parameters/rowFilter.blocks.revelation_id"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/blocks"},"type":"array"},"description":"OK"}}}},"/contracts":{"get":{"tags":["contracts"],"summary":"Originated accounts (KT) that have code","parameters":[{"$ref":"#/parameters/rowFilter.contracts.address"},{"$ref":"#/parameters/rowFilter.contracts.first_level"},{"$ref":"#/parameters/rowFilter.contracts.last_level"},{"$ref":"#/parameters/rowFilter.contracts.balance"},{"$ref":"#/parameters/rowFilter.contracts.counter"},{"$ref":"#/parameters/rowFilter.contracts.num_contracts"},{"$ref":"#/parameters/rowFilter.contracts.num_delegations"},{"$ref":"#/parameters/rowFilter.contracts.num_originations"},{"$ref":"#/parameters/rowFilter.contracts.num_transactions"},{"$ref":"#/parameters/rowFilter.contracts.num_reveals"},{"$ref":"#/parameters/rowFilter.contracts.num_migrations"},{"$ref":"#/parameters/rowFilter.contracts.delegate_id"},{"$ref":"#/parameters/rowFilter.contracts.delegate"},{"$ref":"#/parameters/rowFilter.contracts.delegation_level"},{"$ref":"#/parameters/rowFilter.contracts.is_staked"},{"$ref":"#/parameters/rowFilter.contracts.kind"},{"$ref":"#/parameters/rowFilter.contracts.creator_id"},{"$ref":"#/parameters/rowFilter.contracts.creator"},{"$ref":"#/parameters/rowFilter.contracts.public_key"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/contracts"},"type":"array"},"description":"OK"}}}},"/cycles":{"get":{"tags":["cycles"],"parameters":[{"$ref":"#/parameters/rowFilter.cycles.index"},{"$ref":"#/parameters/rowFilter.cycles.snapshot_index"},{"$ref":"#/parameters/rowFilter.cycles.snapshot_level"},{"$ref":"#/parameters/rowFilter.cycles.total_rolls"},{"$ref":"#/parameters/rowFilter.cycles.total_staking"},{"$ref":"#/parameters/rowFilter.cycles.total_delegated"},{"$ref":"#/parameters/rowFilter.cycles.total_delegators"},{"$ref":"#/parameters/rowFilter.cycles.total_bakers"},{"$ref":"#/parameters/rowFilter.cycles.seed"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/cycles"},"type":"array"},"description":"OK"}}},"post":{"tags":["cycles"],"parameters":[{"$ref":"#/parameters/body.cycles"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferReturn"}],"responses":{"201":{"description":"Created"}}},"delete":{"tags":["cycles"],"parameters":[{"$ref":"#/parameters/rowFilter.cycles.index"},{"$ref":"#/parameters/rowFilter.cycles.snapshot_index"},{"$ref":"#/parameters/rowFilter.cycles.snapshot_level"},{"$ref":"#/parameters/rowFilter.cycles.total_rolls"},{"$ref":"#/parameters/rowFilter.cycles.total_staking"},{"$ref":"#/parameters/rowFilter.cycles.total_delegated"},{"$ref":"#/parameters/rowFilter.cycles.total_delegators"},{"$ref":"#/parameters/rowFilter.cycles.total_bakers"},{"$ref":"#/parameters/rowFilter.cycles.seed"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}},"patch":{"tags":["cycles"],"parameters":[{"$ref":"#/parameters/rowFilter.cycles.index"},{"$ref":"#/parameters/rowFilter.cycles.snapshot_index"},{"$ref":"#/parameters/rowFilter.cycles.snapshot_level"},{"$ref":"#/parameters/rowFilter.cycles.total_rolls"},{"$ref":"#/parameters/rowFilter.cycles.total_staking"},{"$ref":"#/parameters/rowFilter.cycles.total_delegated"},{"$ref":"#/parameters/rowFilter.cycles.total_delegators"},{"$ref":"#/parameters/rowFilter.cycles.total_bakers"},{"$ref":"#/parameters/rowFilter.cycles.seed"},{"$ref":"#/parameters/body.cycles"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}}},"/delegates":{"get":{"tags":["delegates"],"summary":"Implicit accounts (tz) that are registered as delegates","parameters":[{"$ref":"#/parameters/rowFilter.delegates.address"},{"$ref":"#/parameters/rowFilter.delegates.first_level"},{"$ref":"#/parameters/rowFilter.delegates.last_level"},{"$ref":"#/parameters/rowFilter.delegates.balance"},{"$ref":"#/parameters/rowFilter.delegates.counter"},{"$ref":"#/parameters/rowFilter.delegates.num_contracts"},{"$ref":"#/parameters/rowFilter.delegates.num_delegations"},{"$ref":"#/parameters/rowFilter.delegates.num_originations"},{"$ref":"#/parameters/rowFilter.delegates.num_transactions"},{"$ref":"#/parameters/rowFilter.delegates.num_reveals"},{"$ref":"#/parameters/rowFilter.delegates.num_migrations"},{"$ref":"#/parameters/rowFilter.delegates.is_staked"},{"$ref":"#/parameters/rowFilter.delegates.is_activated"},{"$ref":"#/parameters/rowFilter.delegates.revealed"},{"$ref":"#/parameters/rowFilter.delegates.activation_level"},{"$ref":"#/parameters/rowFilter.delegates.deactivation_level"},{"$ref":"#/parameters/rowFilter.delegates.frozen_deposits"},{"$ref":"#/parameters/rowFilter.delegates.frozen_rewards"},{"$ref":"#/parameters/rowFilter.delegates.frozen_fees"},{"$ref":"#/parameters/rowFilter.delegates.delegators_count"},{"$ref":"#/parameters/rowFilter.delegates.staking_balance"},{"$ref":"#/parameters/rowFilter.delegates.num_blocks"},{"$ref":"#/parameters/rowFilter.delegates.num_endorsements"},{"$ref":"#/parameters/rowFilter.delegates.num_ballots"},{"$ref":"#/parameters/rowFilter.delegates.num_proposals"},{"$ref":"#/parameters/rowFilter.delegates.num_double_bakings"},{"$ref":"#/parameters/rowFilter.delegates.num_double_endorsings"},{"$ref":"#/parameters/rowFilter.delegates.num_nonce_revelations"},{"$ref":"#/parameters/rowFilter.delegates.num_revelation_penalties"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/delegates"},"type":"array"},"description":"OK"}}},"post":{"tags":["delegates"],"summary":"Implicit accounts (tz) that are registered as delegates","parameters":[{"$ref":"#/parameters/body.delegates"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferReturn"}],"responses":{"201":{"description":"Created"}}},"delete":{"tags":["delegates"],"summary":"Implicit accounts (tz) that are registered as delegates","parameters":[{"$ref":"#/parameters/rowFilter.delegates.address"},{"$ref":"#/parameters/rowFilter.delegates.first_level"},{"$ref":"#/parameters/rowFilter.delegates.last_level"},{"$ref":"#/parameters/rowFilter.delegates.balance"},{"$ref":"#/parameters/rowFilter.delegates.counter"},{"$ref":"#/parameters/rowFilter.delegates.num_contracts"},{"$ref":"#/parameters/rowFilter.delegates.num_delegations"},{"$ref":"#/parameters/rowFilter.delegates.num_originations"},{"$ref":"#/parameters/rowFilter.delegates.num_transactions"},{"$ref":"#/parameters/rowFilter.delegates.num_reveals"},{"$ref":"#/parameters/rowFilter.delegates.num_migrations"},{"$ref":"#/parameters/rowFilter.delegates.is_staked"},{"$ref":"#/parameters/rowFilter.delegates.is_activated"},{"$ref":"#/parameters/rowFilter.delegates.revealed"},{"$ref":"#/parameters/rowFilter.delegates.activation_level"},{"$ref":"#/parameters/rowFilter.delegates.deactivation_level"},{"$ref":"#/parameters/rowFilter.delegates.frozen_deposits"},{"$ref":"#/parameters/rowFilter.delegates.frozen_rewards"},{"$ref":"#/parameters/rowFilter.delegates.frozen_fees"},{"$ref":"#/parameters/rowFilter.delegates.delegators_count"},{"$ref":"#/parameters/rowFilter.delegates.staking_balance"},{"$ref":"#/parameters/rowFilter.delegates.num_blocks"},{"$ref":"#/parameters/rowFilter.delegates.num_endorsements"},{"$ref":"#/parameters/rowFilter.delegates.num_ballots"},{"$ref":"#/parameters/rowFilter.delegates.num_proposals"},{"$ref":"#/parameters/rowFilter.delegates.num_double_bakings"},{"$ref":"#/parameters/rowFilter.delegates.num_double_endorsings"},{"$ref":"#/parameters/rowFilter.delegates.num_nonce_revelations"},{"$ref":"#/parameters/rowFilter.delegates.num_revelation_penalties"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}},"patch":{"tags":["delegates"],"summary":"Implicit accounts (tz) that are registered as delegates","parameters":[{"$ref":"#/parameters/rowFilter.delegates.address"},{"$ref":"#/parameters/rowFilter.delegates.first_level"},{"$ref":"#/parameters/rowFilter.delegates.last_level"},{"$ref":"#/parameters/rowFilter.delegates.balance"},{"$ref":"#/parameters/rowFilter.delegates.counter"},{"$ref":"#/parameters/rowFilter.delegates.num_contracts"},{"$ref":"#/parameters/rowFilter.delegates.num_delegations"},{"$ref":"#/parameters/rowFilter.delegates.num_originations"},{"$ref":"#/parameters/rowFilter.delegates.num_transactions"},{"$ref":"#/parameters/rowFilter.delegates.num_reveals"},{"$ref":"#/parameters/rowFilter.delegates.num_migrations"},{"$ref":"#/parameters/rowFilter.delegates.is_staked"},{"$ref":"#/parameters/rowFilter.delegates.is_activated"},{"$ref":"#/parameters/rowFilter.delegates.revealed"},{"$ref":"#/parameters/rowFilter.delegates.activation_level"},{"$ref":"#/parameters/rowFilter.delegates.deactivation_level"},{"$ref":"#/parameters/rowFilter.delegates.frozen_deposits"},{"$ref":"#/parameters/rowFilter.delegates.frozen_rewards"},{"$ref":"#/parameters/rowFilter.delegates.frozen_fees"},{"$ref":"#/parameters/rowFilter.delegates.delegators_count"},{"$ref":"#/parameters/rowFilter.delegates.staking_balance"},{"$ref":"#/parameters/rowFilter.delegates.num_blocks"},{"$ref":"#/parameters/rowFilter.delegates.num_endorsements"},{"$ref":"#/parameters/rowFilter.delegates.num_ballots"},{"$ref":"#/parameters/rowFilter.delegates.num_proposals"},{"$ref":"#/parameters/rowFilter.delegates.num_double_bakings"},{"$ref":"#/parameters/rowFilter.delegates.num_double_endorsings"},{"$ref":"#/parameters/rowFilter.delegates.num_nonce_revelations"},{"$ref":"#/parameters/rowFilter.delegates.num_revelation_penalties"},{"$ref":"#/parameters/body.delegates"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}}},"/delegations":{"get":{"tags":["delegations"],"summary":"Used to delegate funds to a delegate (an implicit account registered as a baker)","parameters":[{"$ref":"#/parameters/rowFilter.delegations.level"},{"$ref":"#/parameters/rowFilter.delegations.timestamp"},{"$ref":"#/parameters/rowFilter.delegations.hash"},{"$ref":"#/parameters/rowFilter.delegations.sender_id"},{"$ref":"#/parameters/rowFilter.delegations.sender"},{"$ref":"#/parameters/rowFilter.delegations.counter"},{"$ref":"#/parameters/rowFilter.delegations.baker_fee"},{"$ref":"#/parameters/rowFilter.delegations.gas_limit"},{"$ref":"#/parameters/rowFilter.delegations.consumed_gas"},{"$ref":"#/parameters/rowFilter.delegations.status"},{"$ref":"#/parameters/rowFilter.delegations.errors"},{"$ref":"#/parameters/rowFilter.delegations.initiator_id"},{"$ref":"#/parameters/rowFilter.delegations.initiator"},{"$ref":"#/parameters/rowFilter.delegations.nonce"},{"$ref":"#/parameters/rowFilter.delegations.delegate_id"},{"$ref":"#/parameters/rowFilter.delegations.delegate"},{"$ref":"#/parameters/rowFilter.delegations.prev_delegate_id"},{"$ref":"#/parameters/rowFilter.delegations.prev_delegate"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/delegations"},"type":"array"},"description":"OK"}}}},"/double_bakings":{"get":{"tags":["double_bakings"],"parameters":[{"$ref":"#/parameters/rowFilter.double_bakings.level"},{"$ref":"#/parameters/rowFilter.double_bakings.timestamp"},{"$ref":"#/parameters/rowFilter.double_bakings.hash"},{"$ref":"#/parameters/rowFilter.double_bakings.accused_level"},{"$ref":"#/parameters/rowFilter.double_bakings.accuser_id"},{"$ref":"#/parameters/rowFilter.double_bakings.accuser"},{"$ref":"#/parameters/rowFilter.double_bakings.accuser_reward"},{"$ref":"#/parameters/rowFilter.double_bakings.offender_id"},{"$ref":"#/parameters/rowFilter.double_bakings.offender"},{"$ref":"#/parameters/rowFilter.double_bakings.offender_lost_deposits"},{"$ref":"#/parameters/rowFilter.double_bakings.offender_lost_rewards"},{"$ref":"#/parameters/rowFilter.double_bakings.offender_lost_fees"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/double_bakings"},"type":"array"},"description":"OK"}}}},"/double_endorsings":{"get":{"tags":["double_endorsings"],"parameters":[{"$ref":"#/parameters/rowFilter.double_endorsings.level"},{"$ref":"#/parameters/rowFilter.double_endorsings.timestamp"},{"$ref":"#/parameters/rowFilter.double_endorsings.hash"},{"$ref":"#/parameters/rowFilter.double_endorsings.accused_level"},{"$ref":"#/parameters/rowFilter.double_endorsings.accuser_id"},{"$ref":"#/parameters/rowFilter.double_endorsings.accuser"},{"$ref":"#/parameters/rowFilter.double_endorsings.accuser_reward"},{"$ref":"#/parameters/rowFilter.double_endorsings.offender_id"},{"$ref":"#/parameters/rowFilter.double_endorsings.offender"},{"$ref":"#/parameters/rowFilter.double_endorsings.offender_lost_deposits"},{"$ref":"#/parameters/rowFilter.double_endorsings.offender_lost_rewards"},{"$ref":"#/parameters/rowFilter.double_endorsings.offender_lost_fees"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/double_endorsings"},"type":"array"},"description":"OK"}}}},"/endorsements":{"get":{"tags":["endorsements"],"parameters":[{"$ref":"#/parameters/rowFilter.endorsements.level"},{"$ref":"#/parameters/rowFilter.endorsements.timestamp"},{"$ref":"#/parameters/rowFilter.endorsements.hash"},{"$ref":"#/parameters/rowFilter.endorsements.delegate_id"},{"$ref":"#/parameters/rowFilter.endorsements.delegate"},{"$ref":"#/parameters/rowFilter.endorsements.num_slots"},{"$ref":"#/parameters/rowFilter.endorsements.reward"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/endorsements"},"type":"array"},"description":"OK"}}}},"/migrations":{"get":{"tags":["migrations"],"summary":"A result of the context (database) migration during a protocol update (synthetic type)","parameters":[{"$ref":"#/parameters/rowFilter.migrations.level"},{"$ref":"#/parameters/rowFilter.migrations.timestamp"},{"$ref":"#/parameters/rowFilter.migrations.account_id"},{"$ref":"#/parameters/rowFilter.migrations.account"},{"$ref":"#/parameters/rowFilter.migrations.kind"},{"$ref":"#/parameters/rowFilter.migrations.balance_change"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/migrations"},"type":"array"},"description":"OK"}}}},"/nonce_revelations":{"get":{"tags":["nonce_revelations"],"parameters":[{"$ref":"#/parameters/rowFilter.nonce_revelations.level"},{"$ref":"#/parameters/rowFilter.nonce_revelations.timestamp"},{"$ref":"#/parameters/rowFilter.nonce_revelations.hash"},{"$ref":"#/parameters/rowFilter.nonce_revelations.baker_id"},{"$ref":"#/parameters/rowFilter.nonce_revelations.baker"},{"$ref":"#/parameters/rowFilter.nonce_revelations.sender_id"},{"$ref":"#/parameters/rowFilter.nonce_revelations.sender"},{"$ref":"#/parameters/rowFilter.nonce_revelations.revealed_level"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/nonce_revelations"},"type":"array"},"description":"OK"}}}},"/originations":{"get":{"tags":["originations"],"parameters":[{"$ref":"#/parameters/rowFilter.originations.level"},{"$ref":"#/parameters/rowFilter.originations.timestamp"},{"$ref":"#/parameters/rowFilter.originations.hash"},{"$ref":"#/parameters/rowFilter.originations.sender_id"},{"$ref":"#/parameters/rowFilter.originations.sender"},{"$ref":"#/parameters/rowFilter.originations.counter"},{"$ref":"#/parameters/rowFilter.originations.baker_fee"},{"$ref":"#/parameters/rowFilter.originations.storage_burn"},{"$ref":"#/parameters/rowFilter.originations.allocation_burn"},{"$ref":"#/parameters/rowFilter.originations.gas_limit"},{"$ref":"#/parameters/rowFilter.originations.consumed_gas"},{"$ref":"#/parameters/rowFilter.originations.storage_limit"},{"$ref":"#/parameters/rowFilter.originations.paid_storage_size_diff"},{"$ref":"#/parameters/rowFilter.originations.status"},{"$ref":"#/parameters/rowFilter.originations.errors"},{"$ref":"#/parameters/rowFilter.originations.initiator_id"},{"$ref":"#/parameters/rowFilter.originations.initiator"},{"$ref":"#/parameters/rowFilter.originations.nonce"},{"$ref":"#/parameters/rowFilter.originations.delegate_id"},{"$ref":"#/parameters/rowFilter.originations.delegate"},{"$ref":"#/parameters/rowFilter.originations.contract_id"},{"$ref":"#/parameters/rowFilter.originations.originated_contract"},{"$ref":"#/parameters/rowFilter.originations.balance"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/originations"},"type":"array"},"description":"OK"}}}},"/proposals":{"get":{"tags":["proposals"],"parameters":[{"$ref":"#/parameters/rowFilter.proposals.level"},{"$ref":"#/parameters/rowFilter.proposals.timestamp"},{"$ref":"#/parameters/rowFilter.proposals.hash"},{"$ref":"#/parameters/rowFilter.proposals.period_id"},{"$ref":"#/parameters/rowFilter.proposals.voting_period"},{"$ref":"#/parameters/rowFilter.proposals.proposal_id"},{"$ref":"#/parameters/rowFilter.proposals.protocol_proposal"},{"$ref":"#/parameters/rowFilter.proposals.baker_id"},{"$ref":"#/parameters/rowFilter.proposals.baker"},{"$ref":"#/parameters/rowFilter.proposals.num_rolls"},{"$ref":"#/parameters/rowFilter.proposals.is_duplicate"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/proposals"},"type":"array"},"description":"OK"}}}},"/protocol_proposals":{"get":{"tags":["protocol_proposals"],"summary":"Proposals","parameters":[{"$ref":"#/parameters/rowFilter.protocol_proposals.id"},{"$ref":"#/parameters/rowFilter.protocol_proposals.hash"},{"$ref":"#/parameters/rowFilter.protocol_proposals.status"},{"$ref":"#/parameters/rowFilter.protocol_proposals.baker_id"},{"$ref":"#/parameters/rowFilter.protocol_proposals.baker"},{"$ref":"#/parameters/rowFilter.protocol_proposals.total_rolls"},{"$ref":"#/parameters/rowFilter.protocol_proposals.proposal_period_id"},{"$ref":"#/parameters/rowFilter.protocol_proposals.exploration_period_id"},{"$ref":"#/parameters/rowFilter.protocol_proposals.testing_period_id"},{"$ref":"#/parameters/rowFilter.protocol_proposals.promotion_period_id"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/protocol_proposals"},"type":"array"},"description":"OK"}}}},"/protocols":{"get":{"tags":["protocols"],"parameters":[{"$ref":"#/parameters/rowFilter.protocols.code"},{"$ref":"#/parameters/rowFilter.protocols.hash"},{"$ref":"#/parameters/rowFilter.protocols.first_level"},{"$ref":"#/parameters/rowFilter.protocols.last_level"},{"$ref":"#/parameters/rowFilter.protocols.preserved_cycles"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_cycle"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_comitment"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_snapshot"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_voting"},{"$ref":"#/parameters/rowFilter.protocols.time_between_blocks"},{"$ref":"#/parameters/rowFilter.protocols.endorsers_per_block"},{"$ref":"#/parameters/rowFilter.protocols.hard_operation_gas_limit"},{"$ref":"#/parameters/rowFilter.protocols.hard_operation_storage_limit"},{"$ref":"#/parameters/rowFilter.protocols.hard_block_gas_limit"},{"$ref":"#/parameters/rowFilter.protocols.tokens_per_roll"},{"$ref":"#/parameters/rowFilter.protocols.revelation_reward"},{"$ref":"#/parameters/rowFilter.protocols.block_deposit"},{"$ref":"#/parameters/rowFilter.protocols.block_reward_0"},{"$ref":"#/parameters/rowFilter.protocols.block_reward_1"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_deposit"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_reward_0"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_reward_1"},{"$ref":"#/parameters/rowFilter.protocols.origination_size"},{"$ref":"#/parameters/rowFilter.protocols.byte_cost"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/protocols"},"type":"array"},"description":"OK"}}},"post":{"tags":["protocols"],"parameters":[{"$ref":"#/parameters/body.protocols"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferReturn"}],"responses":{"201":{"description":"Created"}}},"delete":{"tags":["protocols"],"parameters":[{"$ref":"#/parameters/rowFilter.protocols.code"},{"$ref":"#/parameters/rowFilter.protocols.hash"},{"$ref":"#/parameters/rowFilter.protocols.first_level"},{"$ref":"#/parameters/rowFilter.protocols.last_level"},{"$ref":"#/parameters/rowFilter.protocols.preserved_cycles"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_cycle"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_comitment"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_snapshot"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_voting"},{"$ref":"#/parameters/rowFilter.protocols.time_between_blocks"},{"$ref":"#/parameters/rowFilter.protocols.endorsers_per_block"},{"$ref":"#/parameters/rowFilter.protocols.hard_operation_gas_limit"},{"$ref":"#/parameters/rowFilter.protocols.hard_operation_storage_limit"},{"$ref":"#/parameters/rowFilter.protocols.hard_block_gas_limit"},{"$ref":"#/parameters/rowFilter.protocols.tokens_per_roll"},{"$ref":"#/parameters/rowFilter.protocols.revelation_reward"},{"$ref":"#/parameters/rowFilter.protocols.block_deposit"},{"$ref":"#/parameters/rowFilter.protocols.block_reward_0"},{"$ref":"#/parameters/rowFilter.protocols.block_reward_1"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_deposit"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_reward_0"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_reward_1"},{"$ref":"#/parameters/rowFilter.protocols.origination_size"},{"$ref":"#/parameters/rowFilter.protocols.byte_cost"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}},"patch":{"tags":["protocols"],"parameters":[{"$ref":"#/parameters/rowFilter.protocols.code"},{"$ref":"#/parameters/rowFilter.protocols.hash"},{"$ref":"#/parameters/rowFilter.protocols.first_level"},{"$ref":"#/parameters/rowFilter.protocols.last_level"},{"$ref":"#/parameters/rowFilter.protocols.preserved_cycles"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_cycle"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_comitment"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_snapshot"},{"$ref":"#/parameters/rowFilter.protocols.blocks_per_voting"},{"$ref":"#/parameters/rowFilter.protocols.time_between_blocks"},{"$ref":"#/parameters/rowFilter.protocols.endorsers_per_block"},{"$ref":"#/parameters/rowFilter.protocols.hard_operation_gas_limit"},{"$ref":"#/parameters/rowFilter.protocols.hard_operation_storage_limit"},{"$ref":"#/parameters/rowFilter.protocols.hard_block_gas_limit"},{"$ref":"#/parameters/rowFilter.protocols.tokens_per_roll"},{"$ref":"#/parameters/rowFilter.protocols.revelation_reward"},{"$ref":"#/parameters/rowFilter.protocols.block_deposit"},{"$ref":"#/parameters/rowFilter.protocols.block_reward_0"},{"$ref":"#/parameters/rowFilter.protocols.block_reward_1"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_deposit"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_reward_0"},{"$ref":"#/parameters/rowFilter.protocols.endorsement_reward_1"},{"$ref":"#/parameters/rowFilter.protocols.origination_size"},{"$ref":"#/parameters/rowFilter.protocols.byte_cost"},{"$ref":"#/parameters/body.protocols"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}}},"/reveals":{"get":{"tags":["reveals"],"parameters":[{"$ref":"#/parameters/rowFilter.reveals.level"},{"$ref":"#/parameters/rowFilter.reveals.timestamp"},{"$ref":"#/parameters/rowFilter.reveals.hash"},{"$ref":"#/parameters/rowFilter.reveals.sender_id"},{"$ref":"#/parameters/rowFilter.reveals.sender"},{"$ref":"#/parameters/rowFilter.reveals.counter"},{"$ref":"#/parameters/rowFilter.reveals.baker_fee"},{"$ref":"#/parameters/rowFilter.reveals.gas_limit"},{"$ref":"#/parameters/rowFilter.reveals.consumed_gas"},{"$ref":"#/parameters/rowFilter.reveals.status"},{"$ref":"#/parameters/rowFilter.reveals.errors"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/reveals"},"type":"array"},"description":"OK"}}}},"/revelation_penalties":{"get":{"tags":["revelation_penalties"],"summary":"Operation, in which rewards were lost due to unrevealed seed nonces by the delegate (synthetic type)","parameters":[{"$ref":"#/parameters/rowFilter.revelation_penalties.level"},{"$ref":"#/parameters/rowFilter.revelation_penalties.timestamp"},{"$ref":"#/parameters/rowFilter.revelation_penalties.baker_id"},{"$ref":"#/parameters/rowFilter.revelation_penalties.baker"},{"$ref":"#/parameters/rowFilter.revelation_penalties.missed_level"},{"$ref":"#/parameters/rowFilter.revelation_penalties.lost_rewards"},{"$ref":"#/parameters/rowFilter.revelation_penalties.lost_fees"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/revelation_penalties"},"type":"array"},"description":"OK"}}}},"/rewards":{"get":{"tags":["rewards"],"summary":"Baker rewards/penalties per cycle with breakdown by reward/penalty kind","parameters":[{"$ref":"#/parameters/rowFilter.rewards.cycle"},{"$ref":"#/parameters/rowFilter.rewards.baker_id"},{"$ref":"#/parameters/rowFilter.rewards.baker"},{"$ref":"#/parameters/rowFilter.rewards.num_rolls"},{"$ref":"#/parameters/rowFilter.rewards.staking_balance"},{"$ref":"#/parameters/rowFilter.rewards.delegated_balance"},{"$ref":"#/parameters/rowFilter.rewards.num_delegators"},{"$ref":"#/parameters/rowFilter.rewards.num_future_blocks"},{"$ref":"#/parameters/rowFilter.rewards.num_own_blocks"},{"$ref":"#/parameters/rowFilter.rewards.num_extra_blocks"},{"$ref":"#/parameters/rowFilter.rewards.num_missed_own_blocks"},{"$ref":"#/parameters/rowFilter.rewards.num_missed_extra_blocks"},{"$ref":"#/parameters/rowFilter.rewards.num_uncovered_own_blocks"},{"$ref":"#/parameters/rowFilter.rewards.num_uncovered_extra_blocks"},{"$ref":"#/parameters/rowFilter.rewards.num_future_endorsements"},{"$ref":"#/parameters/rowFilter.rewards.num_endorsements"},{"$ref":"#/parameters/rowFilter.rewards.num_missed_endorsements"},{"$ref":"#/parameters/rowFilter.rewards.num_uncovered_endorsements"},{"$ref":"#/parameters/rowFilter.rewards.future_block_rewards"},{"$ref":"#/parameters/rowFilter.rewards.own_block_rewards"},{"$ref":"#/parameters/rowFilter.rewards.extra_block_rewards"},{"$ref":"#/parameters/rowFilter.rewards.missed_own_block_rewards"},{"$ref":"#/parameters/rowFilter.rewards.missed_extra_block_rewards"},{"$ref":"#/parameters/rowFilter.rewards.uncovered_own_block_rewards"},{"$ref":"#/parameters/rowFilter.rewards.uncovered_extra_block_rewards"},{"$ref":"#/parameters/rowFilter.rewards.future_endorsement_rewards"},{"$ref":"#/parameters/rowFilter.rewards.endorsement_rewards"},{"$ref":"#/parameters/rowFilter.rewards.missed_endorsement_rewards"},{"$ref":"#/parameters/rowFilter.rewards.uncovered_endorsement_rewards"},{"$ref":"#/parameters/rowFilter.rewards.own_block_fees"},{"$ref":"#/parameters/rowFilter.rewards.extra_block_fees"},{"$ref":"#/parameters/rowFilter.rewards.missed_own_block_fees"},{"$ref":"#/parameters/rowFilter.rewards.missed_extra_block_fees"},{"$ref":"#/parameters/rowFilter.rewards.uncovered_own_block_fees"},{"$ref":"#/parameters/rowFilter.rewards.uncovered_extra_block_fees"},{"$ref":"#/parameters/rowFilter.rewards.double_baking_rewards"},{"$ref":"#/parameters/rowFilter.rewards.double_baking_lost_deposits"},{"$ref":"#/parameters/rowFilter.rewards.double_baking_lost_rewards"},{"$ref":"#/parameters/rowFilter.rewards.double_baking_lost_fees"},{"$ref":"#/parameters/rowFilter.rewards.double_endorsing_rewards"},{"$ref":"#/parameters/rowFilter.rewards.double_endorsing_lost_deposits"},{"$ref":"#/parameters/rowFilter.rewards.double_endorsing_lost_rewards"},{"$ref":"#/parameters/rowFilter.rewards.double_endorsing_lost_fees"},{"$ref":"#/parameters/rowFilter.rewards.revelation_rewards"},{"$ref":"#/parameters/rowFilter.rewards.revelation_lost_rewards"},{"$ref":"#/parameters/rowFilter.rewards.revelation_lost_fees"},{"$ref":"#/parameters/rowFilter.rewards.future_block_deposits"},{"$ref":"#/parameters/rowFilter.rewards.block_deposits"},{"$ref":"#/parameters/rowFilter.rewards.future_endorsement_deposits"},{"$ref":"#/parameters/rowFilter.rewards.endorsement_deposits"},{"$ref":"#/parameters/rowFilter.rewards.expected_blocks"},{"$ref":"#/parameters/rowFilter.rewards.expected_endorsements"},{"$ref":"#/parameters/rowFilter.rewards.total_rewards"},{"$ref":"#/parameters/rowFilter.rewards.total_penalties"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/rewards"},"type":"array"},"description":"OK"}}}},"/rights":{"get":{"tags":["rights"],"parameters":[{"$ref":"#/parameters/rowFilter.rights.cycle"},{"$ref":"#/parameters/rowFilter.rights.level"},{"$ref":"#/parameters/rowFilter.rights.baker_id"},{"$ref":"#/parameters/rowFilter.rights.baker"},{"$ref":"#/parameters/rowFilter.rights.type"},{"$ref":"#/parameters/rowFilter.rights.status"},{"$ref":"#/parameters/rowFilter.rights.priority"},{"$ref":"#/parameters/rowFilter.rights.num_slots"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/rights"},"type":"array"},"description":"OK"}}}},"/summary":{"get":{"tags":["summary"],"parameters":[{"$ref":"#/parameters/rowFilter.summary.level"},{"$ref":"#/parameters/rowFilter.summary.timestamp"},{"$ref":"#/parameters/rowFilter.summary.protocol"},{"$ref":"#/parameters/rowFilter.summary.next_protocol"},{"$ref":"#/parameters/rowFilter.summary.block_hash"},{"$ref":"#/parameters/rowFilter.summary.num_accounts"},{"$ref":"#/parameters/rowFilter.summary.num_protocols"},{"$ref":"#/parameters/rowFilter.summary.num_activations"},{"$ref":"#/parameters/rowFilter.summary.num_ballots"},{"$ref":"#/parameters/rowFilter.summary.num_delegations"},{"$ref":"#/parameters/rowFilter.summary.num_double_bakings"},{"$ref":"#/parameters/rowFilter.summary.num_double_endorsings"},{"$ref":"#/parameters/rowFilter.summary.num_endorsements"},{"$ref":"#/parameters/rowFilter.summary.num_nonce_revelations"},{"$ref":"#/parameters/rowFilter.summary.num_originations"},{"$ref":"#/parameters/rowFilter.summary.num_proposals"},{"$ref":"#/parameters/rowFilter.summary.num_reveals"},{"$ref":"#/parameters/rowFilter.summary.num_transactions"},{"$ref":"#/parameters/rowFilter.summary.num_migrations"},{"$ref":"#/parameters/rowFilter.summary.num_revelation_penalties"},{"$ref":"#/parameters/rowFilter.summary.num_protocol_proposals"},{"$ref":"#/parameters/rowFilter.summary.num_cycles"},{"$ref":"#/parameters/rowFilter.summary.xtz_btc"},{"$ref":"#/parameters/rowFilter.summary.xtz_eur"},{"$ref":"#/parameters/rowFilter.summary.quote_level"},{"$ref":"#/parameters/rowFilter.summary.xtz_usd"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/summary"},"type":"array"},"description":"OK"}}},"post":{"tags":["summary"],"parameters":[{"$ref":"#/parameters/body.summary"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferReturn"}],"responses":{"201":{"description":"Created"}}},"delete":{"tags":["summary"],"parameters":[{"$ref":"#/parameters/rowFilter.summary.level"},{"$ref":"#/parameters/rowFilter.summary.timestamp"},{"$ref":"#/parameters/rowFilter.summary.protocol"},{"$ref":"#/parameters/rowFilter.summary.next_protocol"},{"$ref":"#/parameters/rowFilter.summary.block_hash"},{"$ref":"#/parameters/rowFilter.summary.num_accounts"},{"$ref":"#/parameters/rowFilter.summary.num_protocols"},{"$ref":"#/parameters/rowFilter.summary.num_activations"},{"$ref":"#/parameters/rowFilter.summary.num_ballots"},{"$ref":"#/parameters/rowFilter.summary.num_delegations"},{"$ref":"#/parameters/rowFilter.summary.num_double_bakings"},{"$ref":"#/parameters/rowFilter.summary.num_double_endorsings"},{"$ref":"#/parameters/rowFilter.summary.num_endorsements"},{"$ref":"#/parameters/rowFilter.summary.num_nonce_revelations"},{"$ref":"#/parameters/rowFilter.summary.num_originations"},{"$ref":"#/parameters/rowFilter.summary.num_proposals"},{"$ref":"#/parameters/rowFilter.summary.num_reveals"},{"$ref":"#/parameters/rowFilter.summary.num_transactions"},{"$ref":"#/parameters/rowFilter.summary.num_migrations"},{"$ref":"#/parameters/rowFilter.summary.num_revelation_penalties"},{"$ref":"#/parameters/rowFilter.summary.num_protocol_proposals"},{"$ref":"#/parameters/rowFilter.summary.num_cycles"},{"$ref":"#/parameters/rowFilter.summary.xtz_btc"},{"$ref":"#/parameters/rowFilter.summary.xtz_eur"},{"$ref":"#/parameters/rowFilter.summary.quote_level"},{"$ref":"#/parameters/rowFilter.summary.xtz_usd"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}},"patch":{"tags":["summary"],"parameters":[{"$ref":"#/parameters/rowFilter.summary.level"},{"$ref":"#/parameters/rowFilter.summary.timestamp"},{"$ref":"#/parameters/rowFilter.summary.protocol"},{"$ref":"#/parameters/rowFilter.summary.next_protocol"},{"$ref":"#/parameters/rowFilter.summary.block_hash"},{"$ref":"#/parameters/rowFilter.summary.num_accounts"},{"$ref":"#/parameters/rowFilter.summary.num_protocols"},{"$ref":"#/parameters/rowFilter.summary.num_activations"},{"$ref":"#/parameters/rowFilter.summary.num_ballots"},{"$ref":"#/parameters/rowFilter.summary.num_delegations"},{"$ref":"#/parameters/rowFilter.summary.num_double_bakings"},{"$ref":"#/parameters/rowFilter.summary.num_double_endorsings"},{"$ref":"#/parameters/rowFilter.summary.num_endorsements"},{"$ref":"#/parameters/rowFilter.summary.num_nonce_revelations"},{"$ref":"#/parameters/rowFilter.summary.num_originations"},{"$ref":"#/parameters/rowFilter.summary.num_proposals"},{"$ref":"#/parameters/rowFilter.summary.num_reveals"},{"$ref":"#/parameters/rowFilter.summary.num_transactions"},{"$ref":"#/parameters/rowFilter.summary.num_migrations"},{"$ref":"#/parameters/rowFilter.summary.num_revelation_penalties"},{"$ref":"#/parameters/rowFilter.summary.num_protocol_proposals"},{"$ref":"#/parameters/rowFilter.summary.num_cycles"},{"$ref":"#/parameters/rowFilter.summary.xtz_btc"},{"$ref":"#/parameters/rowFilter.summary.xtz_eur"},{"$ref":"#/parameters/rowFilter.summary.quote_level"},{"$ref":"#/parameters/rowFilter.summary.xtz_usd"},{"$ref":"#/parameters/body.summary"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}}},"/transactions":{"get":{"tags":["transactions"],"parameters":[{"$ref":"#/parameters/rowFilter.transactions.level"},{"$ref":"#/parameters/rowFilter.transactions.timestamp"},{"$ref":"#/parameters/rowFilter.transactions.hash"},{"$ref":"#/parameters/rowFilter.transactions.sender_id"},{"$ref":"#/parameters/rowFilter.transactions.sender"},{"$ref":"#/parameters/rowFilter.transactions.counter"},{"$ref":"#/parameters/rowFilter.transactions.baker_fee"},{"$ref":"#/parameters/rowFilter.transactions.storage_burn"},{"$ref":"#/parameters/rowFilter.transactions.allocation_burn"},{"$ref":"#/parameters/rowFilter.transactions.gas_limit"},{"$ref":"#/parameters/rowFilter.transactions.consumed_gas"},{"$ref":"#/parameters/rowFilter.transactions.storage_limit"},{"$ref":"#/parameters/rowFilter.transactions.paid_storage_size_diff"},{"$ref":"#/parameters/rowFilter.transactions.status"},{"$ref":"#/parameters/rowFilter.transactions.errors"},{"$ref":"#/parameters/rowFilter.transactions.initiator_id"},{"$ref":"#/parameters/rowFilter.transactions.initiator"},{"$ref":"#/parameters/rowFilter.transactions.nonce"},{"$ref":"#/parameters/rowFilter.transactions.destination_id"},{"$ref":"#/parameters/rowFilter.transactions.destination"},{"$ref":"#/parameters/rowFilter.transactions.amount"},{"$ref":"#/parameters/rowFilter.transactions.parameters"},{"$ref":"#/parameters/rowFilter.transactions.has_internal_delegations"},{"$ref":"#/parameters/rowFilter.transactions.has_internal_originations"},{"$ref":"#/parameters/rowFilter.transactions.has_internal_transactions"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/transactions"},"type":"array"},"description":"OK"}}}},"/users":{"get":{"tags":["users"],"summary":"Implicit accounts (tz) that are not registered as delegates.","parameters":[{"$ref":"#/parameters/rowFilter.users.address"},{"$ref":"#/parameters/rowFilter.users.first_level"},{"$ref":"#/parameters/rowFilter.users.last_level"},{"$ref":"#/parameters/rowFilter.users.balance"},{"$ref":"#/parameters/rowFilter.users.counter"},{"$ref":"#/parameters/rowFilter.users.num_contracts"},{"$ref":"#/parameters/rowFilter.users.num_delegations"},{"$ref":"#/parameters/rowFilter.users.num_originations"},{"$ref":"#/parameters/rowFilter.users.num_transactions"},{"$ref":"#/parameters/rowFilter.users.num_reveals"},{"$ref":"#/parameters/rowFilter.users.num_migrations"},{"$ref":"#/parameters/rowFilter.users.delegate_id"},{"$ref":"#/parameters/rowFilter.users.delegate"},{"$ref":"#/parameters/rowFilter.users.delegation_level"},{"$ref":"#/parameters/rowFilter.users.is_staked"},{"$ref":"#/parameters/rowFilter.users.public_key"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/users"},"type":"array"},"description":"OK"}}}},"/voting_periods":{"get":{"tags":["voting_periods"],"parameters":[{"$ref":"#/parameters/rowFilter.voting_periods.code"},{"$ref":"#/parameters/rowFilter.voting_periods.kind"},{"$ref":"#/parameters/rowFilter.voting_periods.start_level"},{"$ref":"#/parameters/rowFilter.voting_periods.end_level"},{"$ref":"#/parameters/rowFilter.voting_periods.proposal_id"},{"$ref":"#/parameters/rowFilter.voting_periods.total_stake"},{"$ref":"#/parameters/rowFilter.voting_periods.participation"},{"$ref":"#/parameters/rowFilter.voting_periods.quorum"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/voting_periods"},"type":"array"},"description":"OK"}}},"post":{"tags":["voting_periods"],"parameters":[{"$ref":"#/parameters/body.voting_periods"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/preferReturn"}],"responses":{"201":{"description":"Created"}}},"delete":{"tags":["voting_periods"],"parameters":[{"$ref":"#/parameters/rowFilter.voting_periods.code"},{"$ref":"#/parameters/rowFilter.voting_periods.kind"},{"$ref":"#/parameters/rowFilter.voting_periods.start_level"},{"$ref":"#/parameters/rowFilter.voting_periods.end_level"},{"$ref":"#/parameters/rowFilter.voting_periods.proposal_id"},{"$ref":"#/parameters/rowFilter.voting_periods.total_stake"},{"$ref":"#/parameters/rowFilter.voting_periods.participation"},{"$ref":"#/parameters/rowFilter.voting_periods.quorum"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}},"patch":{"tags":["voting_periods"],"parameters":[{"$ref":"#/parameters/rowFilter.voting_periods.code"},{"$ref":"#/parameters/rowFilter.voting_periods.kind"},{"$ref":"#/parameters/rowFilter.voting_periods.start_level"},{"$ref":"#/parameters/rowFilter.voting_periods.end_level"},{"$ref":"#/parameters/rowFilter.voting_periods.proposal_id"},{"$ref":"#/parameters/rowFilter.voting_periods.total_stake"},{"$ref":"#/parameters/rowFilter.voting_periods.participation"},{"$ref":"#/parameters/rowFilter.voting_periods.quorum"},{"$ref":"#/parameters/body.voting_periods"},{"$ref":"#/parameters/preferReturn"}],"responses":{"204":{"description":"No Content"}}}},"/voting_snapshots":{"get":{"tags":["voting_snapshots"],"parameters":[{"$ref":"#/parameters/rowFilter.voting_snapshots.level"},{"$ref":"#/parameters/rowFilter.voting_snapshots.period_id"},{"$ref":"#/parameters/rowFilter.voting_snapshots.voting_period"},{"$ref":"#/parameters/rowFilter.voting_snapshots.delegate_id"},{"$ref":"#/parameters/rowFilter.voting_snapshots.delegate"},{"$ref":"#/parameters/rowFilter.voting_snapshots.num_rolls"},{"$ref":"#/parameters/select"},{"$ref":"#/parameters/order"},{"$ref":"#/parameters/range"},{"$ref":"#/parameters/rangeUnit"},{"$ref":"#/parameters/offset"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/preferCount"}],"responses":{"206":{"description":"Partial Content"},"200":{"schema":{"items":{"$ref":"#/definitions/voting_snapshots"},"type":"array"},"description":"OK"}}}}},"definitions":{"activations":{"description":"Used to activate accounts that were recommended allocations of tezos tokens for donations to the Tezos Foundationâ€™s fundraiser","properties":{"level":{"format":"integer","type":"integer","description":"The height of the block, from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"account_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"account":{"maxLength":36,"format":"character","type":"string","description":"Address of the activated account"},"balance":{"format":"bigint","type":"integer","description":"Account activation balance of tezos tokens that were recommended allocations for donations to the Tezos Foundationâ€™s fundraiser"}},"type":"object"},"balance_snapshots":{"properties":{"cycle":{"format":"integer","type":"integer"},"delegator_id":{"format":"integer","type":"integer"},"delegator":{"maxLength":36,"format":"character","type":"string"},"baker_id":{"format":"integer","type":"integer"},"baker":{"maxLength":36,"format":"character","type":"string"},"balance":{"format":"bigint","type":"integer"}},"type":"object"},"ballots":{"description":"Used to vote for a proposal in a given voting cycle","properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"period_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `VotingPeriods.Id`.<fk table='VotingPeriods' column='Id'/>"},"voting_period":{"format":"integer","type":"integer","description":"Index of the voting period for which the ballot was submitted"},"proposal_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Proposals.Id`.<fk table='Proposals' column='Id'/>"},"proposal":{"maxLength":51,"format":"character","type":"string","description":"Hash of the proposal for which ballot was submitted"},"baker_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"baker":{"maxLength":36,"format":"character","type":"string","description":"Information about the delegate (baker), submitted the ballot"},"num_rolls":{"format":"integer","type":"integer","description":"Number of baker's rolls (baker's voting power)"},"vote":{"format":"integer","type":"integer","description":"Vote, given in the ballot (yay, nay, or pass)"}},"type":"object"},"blocks":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Block hash"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"The datetime at which the block is claimed to have been created (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"proto_code":{"format":"integer","type":"integer","description":"Protocol code, representing a number of protocol changes since genesis (mod 256, but -1 for the genesis block)\n\nNote:\nThis is a Foreign Key to `Protocols.Code`.<fk table='Protocols' column='Code'/>"},"priority":{"format":"integer","type":"integer","description":"The position in the priority list of delegates at which the block was baked"},"num_endorsements":{"format":"integer","type":"integer","description":"Number of endorsements, confirming the block"},"is_cycle_start":{"format":"boolean","type":"boolean","description":"This is the first block of the cycle"},"is_cycle_end":{"format":"boolean","type":"boolean","description":"This is the last block of the cycle"},"is_protocol_start":{"format":"boolean","type":"boolean","description":"This is the first block of a protocol"},"is_protocol_end":{"format":"boolean","type":"boolean","description":"This is the last block of a protocol"},"is_voting_period_start":{"format":"boolean","type":"boolean","description":"This is the first block of a voting period"},"is_voring_period_end":{"format":"boolean","type":"boolean","description":"This is the last block of a voting period"},"has_deactivations":{"format":"boolean","type":"boolean","description":"At least one delegate (baker) was deactivated in this block"},"has_account_allocations":{"format":"boolean","type":"boolean","description":"At least one account was allocated (via origination, activation, or transaction to a non-existent address) was deactivated in this block"},"has_smart_contract_interaction":{"format":"boolean","type":"boolean","description":"In this block a smart-contract (excluding manager.tz) was deployed or invoked."},"is_snapshot":{"format":"boolean","type":"boolean","description":"This block was randomly chosen for making a snapshot of balances."},"has_delegator_contract_interaction":{"format":"boolean","type":"boolean","description":"In this block a delegator contract (manager.tz) was deployed or invoked."},"has_ballots":{"format":"boolean","type":"boolean","description":"At least one ballot operation was injected in this block."},"has_proposals":{"format":"boolean","type":"boolean","description":"At least one proposal operation was injected in this block."},"has_activations":{"format":"boolean","type":"boolean","description":"At least one activation operation was injected in this block."},"has_double_bakings":{"format":"boolean","type":"boolean","description":"At least one double baking accusation was injected in this block."},"has_double_endorsings":{"format":"boolean","type":"boolean","description":"At least one double endorsement accusation was in during this block."},"has_revelations":{"format":"boolean","type":"boolean","description":"At least one nonce revelation operation was injected in this block."},"has_transactions":{"format":"boolean","type":"boolean","description":"At least one transaction operation was injected in this block."},"has_reveals":{"format":"boolean","type":"boolean","description":"At least one reveal operation was injected in this block."},"has_migrations":{"format":"boolean","type":"boolean","description":"A context migration happened in this block."},"has_revelations_penalties":{"format":"boolean","type":"boolean","description":"A penalty for not revealing seed nonce was applied in this block."},"reward":{"format":"bigint","type":"integer","description":"Reward of the baker for producing the block (micro tez)"},"fees":{"format":"bigint","type":"integer","description":"Total fee paid by all operations, included in the block"},"baker_id":{"format":"integer","type":"integer","description":"Accounts\n\nNote:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"baker":{"maxLength":36,"format":"character","type":"string","description":"Address of the delegate (baker), produced the block"},"revelation_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `NonceRevelationOps.RevealedLevel`.<fk table='NonceRevelationOps' column='RevealedLevel'/>"}},"type":"object"},"contracts":{"description":"Originated accounts (KT) that have code","properties":{"address":{"maxLength":36,"format":"character","type":"string","description":"Public key hash of the account"},"first_level":{"format":"integer","type":"integer","description":"Block height of the first operation related to the account\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"last_level":{"format":"integer","type":"integer","description":"Height of the block in which the account state was changed last time"},"balance":{"format":"bigint","type":"integer","description":"Account balance/Total balance of the delegate (baker), including spendable and frozen funds (micro tez)"},"counter":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent operation replay"},"num_contracts":{"format":"integer","type":"integer","description":"Number of contracts, created (originated) and/or managed by the account"},"num_delegations":{"format":"integer","type":"integer","description":"Number of delegation operations, related to the account"},"num_originations":{"format":"integer","type":"integer","description":"Number of all origination (deployment / contract creation) operations, related to the account"},"num_transactions":{"format":"integer","type":"integer","description":"Number of all transaction (tez transfer) operations, related to the account"},"num_reveals":{"format":"integer","type":"integer","description":"Number of reveal (is used to reveal the public key associated with an account) operations of the contract"},"num_migrations":{"format":"integer","type":"integer","description":"Number of migration (result of the context (database) migration during a protocol update) operations, related to the account (synthetic type)"},"delegate_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"delegate":{"maxLength":36,"format":"character","type":"string","description":"Address of the current delegate of the account. null if it's not delegated"},"delegation_level":{"format":"integer","type":"integer","description":"Block height of latest delegation. null if it's not delegated"},"is_staked":{"format":"boolean","type":"boolean","description":"Whether account participates in staking (bakes or delegates)"},"kind":{"format":"text","type":"string","description":"Sub kinds: delegator_contract (aka manager.tz) or smart_contract"},"creator_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"creator":{"maxLength":36,"format":"character","type":"string","description":"Address of the account, which has deployed the contract to the blockchain"},"public_key":{"maxLength":55,"format":"character varying","type":"string","description":"Base58 representation of account's public key, revealed by the account"}},"type":"object"},"cycles":{"properties":{"index":{"format":"integer","type":"integer","description":"Cycle index starting from zero"},"snapshot_index":{"format":"integer","type":"integer","description":"Relative index of the snapshot"},"snapshot_level":{"format":"integer","type":"integer","description":"Height of the block where the snapshot was taken"},"total_rolls":{"format":"integer","type":"integer","description":"Total number of rolls involved in baking rights distribution"},"total_staking":{"format":"bigint","type":"integer","description":"Total staking balance of all active in this cycle bakers"},"total_delegated":{"format":"bigint","type":"integer","description":"Total balance delegated to active bakers"},"total_delegators":{"format":"integer","type":"integer","description":"Total number of active bakers' delegators"},"total_bakers":{"format":"integer","type":"integer","description":"Total number of all active in this cycle bakers"},"seed":{"maxLength":64,"format":"character","type":"string","description":"Randomly generated seed used by the network for things like baking rights distribution etc."}},"type":"object"},"delegates":{"description":"Implicit accounts (tz) that are registered as delegates","properties":{"address":{"maxLength":36,"format":"character","type":"string","description":"Public key hash of the account"},"first_level":{"format":"integer","type":"integer","description":"Block height of the first operation related to the account\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"last_level":{"format":"integer","type":"integer","description":"Height of the block in which the account state was changed last time"},"balance":{"format":"bigint","type":"integer","description":"Account balance/Total balance of the delegate (baker), including spendable and frozen funds (micro tez)"},"counter":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent operation replay"},"num_contracts":{"format":"integer","type":"integer","description":"Number of contracts, created (originated) and/or managed by the account"},"num_delegations":{"format":"integer","type":"integer","description":"Number of delegation operations, related to the account"},"num_originations":{"format":"integer","type":"integer","description":"Number of all origination (deployment / contract creation) operations, related to the account"},"num_transactions":{"format":"integer","type":"integer","description":"Number of all transaction (tez transfer) operations, related to the account"},"num_reveals":{"format":"integer","type":"integer","description":"Number of reveal (is used to reveal the public key associated with an account) operations of the contract"},"num_migrations":{"format":"integer","type":"integer","description":"Number of migration (result of the context (database) migration during a protocol update) operations, related to the account (synthetic type)"},"is_staked":{"format":"boolean","type":"boolean","description":"Whether account participates in staking (bakes or delegates)"},"is_activated":{"format":"boolean","type":"boolean","description":"Delegation status (true - active, false - deactivated)"},"revealed":{"format":"boolean","type":"boolean","description":"Public key revelation status. Unrevealed account can't send manager operation (transaction, origination etc.)"},"activation_level":{"format":"integer","type":"integer","description":"Block height when delegate (baker) was registered as a baker last time"},"deactivation_level":{"format":"integer","type":"integer","description":"Block height when delegate (baker) was deactivated as a baker because of lack of funds or inactivity"},"frozen_deposits":{"format":"bigint","type":"integer","description":"Amount of security deposit, currently locked for baked (produced) blocks and (or) given endorsements (micro tez)"},"frozen_rewards":{"format":"bigint","type":"integer","description":"Amount of currently frozen baking rewards (micro tez)"},"frozen_fees":{"format":"bigint","type":"integer","description":"Amount of currently frozen fees paid by operations inside blocks, baked (produced) by the delegate (micro tez)"},"delegators_count":{"format":"integer","type":"integer","description":"Number of current delegators (accounts, delegated their funds) of the delegate (baker)"},"staking_balance":{"format":"bigint","type":"integer","description":"Sum of delegate (baker) balance and delegated funds minus frozen rewards (micro tez)"},"num_blocks":{"format":"integer","type":"integer","description":"Number of baked (validated) blocks all the time by the delegate (baker)"},"num_endorsements":{"format":"integer","type":"integer","description":"Number of given endorsements (approvals) by the delegate (baker)"},"num_ballots":{"format":"integer","type":"integer","description":"Number of submitted by the delegate ballots during a voting period"},"num_proposals":{"format":"integer","type":"integer","description":"Number of submitted (upvoted) by the delegate proposals during a proposal period"},"num_double_bakings":{"format":"integer","type":"integer","description":"Number of double baking (baking two different blocks at the same height) evidence operations, included in blocks, baked (validated) by the delegate"},"num_double_endorsings":{"format":"integer","type":"integer","description":"Number of double endorsement (endorsing two different blocks at the same block height) evidence operations, included in blocks, baked (validated) by the delegate"},"num_nonce_revelations":{"format":"integer","type":"integer","description":"Number of seed nonce revelation (are used by the blockchain to create randomness) operations provided by the delegate"},"num_revelation_penalties":{"format":"integer","type":"integer","description":"Number of operations for all time in which rewards were lost due to unrevealed seed nonces by the delegate (synthetic type)"}},"type":"object"},"delegations":{"description":"Used to delegate funds to a delegate (an implicit account registered as a baker)","properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"sender_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"sender":{"maxLength":36,"format":"character","type":"string","description":"Address of the delegated account"},"counter":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent operation replay"},"baker_fee":{"format":"bigint","type":"integer","description":"Fee to a baker, produced block, in which the operation was included"},"gas_limit":{"format":"integer","type":"integer","description":"A cap on the amount of gas a given operation can consume"},"consumed_gas":{"format":"integer","type":"integer","description":"Amount of gas, consumed by the operation"},"status":{"format":"text","type":"string","description":"Operation status (applied - an operation applied by the node and successfully added to the blockchain, failed - an operation which failed with some particular error (not enough balance, gas limit, etc), backtracked - an operation which was successful but reverted due to one of the following operations in the same operation group was failed, skipped - all operations after the failed one in an operation group)"},"errors":{"format":"text","type":"string","description":"List of errors provided by the node, which has injected the operation to the blockchain. null if there is no errors"},"initiator_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"initiator":{"maxLength":36,"format":"character","type":"string","description":"Address of the initiator of the delegation contract call"},"nonce":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent internal operation replay"},"delegate_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"delegate":{"maxLength":36,"format":"character","type":"string","description":"Address of the delegate (baker) that accepted the delegation. null if delegate is not specified (undelegation operation)"},"prev_delegate_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"prev_delegate":{"maxLength":36,"format":"character","type":"string","description":"Address of the previous delegate of the account. null if there is no previous delegate"}},"type":"object"},"double_bakings":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"accused_level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, which was double baked"},"accuser_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"accuser":{"maxLength":36,"format":"character","type":"string","description":"Address of the baker (delegate), produced the block, in which the operation was included"},"accuser_reward":{"format":"bigint","type":"integer","description":"Reward of the baker (delegate), produced the block, in which the operation was included"},"offender_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"offender":{"maxLength":36,"format":"character","type":"string","description":"Address of the baker (delegate), accused for producing two different blocks at the same height"},"offender_lost_deposits":{"format":"bigint","type":"integer","description":"Amount of frozen security deposit, lost by accused baker (delegate)"},"offender_lost_rewards":{"format":"bigint","type":"integer","description":"Amount of frozen rewards, lost by accused baker (delegate)"},"offender_lost_fees":{"format":"bigint","type":"integer","description":"Amount of frozen fees, lost by accused baker (delegate)"}},"type":"object"},"double_endorsings":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"accused_level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, at which double endorsing occurred"},"accuser_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"accuser":{"maxLength":36,"format":"character","type":"string","description":"Address of the baker (delegate), produced the block, in which the operation was included"},"accuser_reward":{"format":"bigint","type":"integer","description":"Reward of the baker (delegate), produced the block, in which the operation was included"},"offender_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"offender":{"maxLength":36,"format":"character","type":"string","description":"Address of the baker (delegate), accused for producing two different endorsements at the same height"},"offender_lost_deposits":{"format":"bigint","type":"integer","description":"Amount of frozen security deposit, lost by accused baker (delegate)"},"offender_lost_rewards":{"format":"bigint","type":"integer","description":"Amount of frozen rewards, lost by accused baker (delegate)"},"offender_lost_fees":{"format":"bigint","type":"integer","description":"Amount of frozen fees, lost by accused baker (delegate)"}},"type":"object"},"endorsements":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"delegate_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"delegate":{"maxLength":36,"format":"character","type":"string","description":"Address of the baker (delegate) who sent the operation"},"num_slots":{"format":"integer","type":"integer","description":"Number of assigned endorsement slots (out of 32) to the baker (delegate) who sent the operation"},"reward":{"format":"bigint","type":"integer","description":"Reward of the baker (delegate) for the operation"}},"type":"object"},"migrations":{"description":"A result of the context (database) migration during a protocol update (synthetic type)","properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"account_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"account":{"maxLength":36,"format":"character","type":"string","description":"Address of the account whose balance has updated as a result of the operation"},"kind":{"format":"text","type":"string","description":"Kind of the migration\\nbootstrap - Balance updates, included in the first block after genesis activate_delegate - registering a new baker (delegator) during protocol migration airdrop - airdrop of 1 micro tez during Babylon protocol upgrade proposal_invoice - invoice for creation a proposal for protocol upgrade"},"balance_change":{"format":"bigint","type":"integer","description":"The amount for which the operation updated the balance (micro tez)"}},"type":"object"},"nonce_revelations":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included.\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation."},"baker_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"baker":{"maxLength":36,"format":"character","type":"string","description":"Address of the delegate (baker), who produced the block with the operation."},"sender_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"sender":{"maxLength":36,"format":"character","type":"string","description":"Address of the delegate (baker), who revealed the nonce (sent the operation)."},"revealed_level":{"format":"integer","type":"integer","description":"Block height of the block, where seed nonce hash is stored."}},"type":"object"},"originations":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"sender_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"sender":{"maxLength":36,"format":"character","type":"string","description":"Address of the account, created a contract"},"counter":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent operation replay"},"baker_fee":{"format":"bigint","type":"integer","description":"Fee to the baker, produced block, in which the operation was included (micro tez)"},"storage_burn":{"format":"bigint","type":"integer","description":"The amount of funds burned from the sender account for contract storage in the blockchain (micro tez)"},"allocation_burn":{"format":"bigint","type":"integer","description":"The amount of funds burned from the sender account for contract account creation (micro tez)"},"gas_limit":{"format":"integer","type":"integer","description":"A cap on the amount of gas a given operation can consume"},"consumed_gas":{"format":"integer","type":"integer","description":"Amount of gas, consumed by the operation"},"storage_limit":{"format":"integer","type":"integer","description":"A cap on the amount of storage a given operation can consume"},"paid_storage_size_diff":{"format":"integer","type":"integer","description":"Amount of storage, consumed by the operation, that is subject to pay"},"status":{"format":"text","type":"string","description":"Operation status (applied - an operation applied by the node and successfully added to the blockchain, failed - an operation which failed with some particular error (not enough balance, gas limit, etc), backtracked - an operation which was a successful but reverted due to one of the following operations in the same operation group was failed, skipped - all operations after the failed one in an operation group)"},"errors":{"format":"text","type":"string","description":"List of errors provided by the node, injected the operation to the blockchain. null if there is no errors"},"initiator_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"initiator":{"maxLength":36,"format":"character","type":"string","description":"Address of the initiator of the contract call"},"nonce":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent internal operation replay"},"delegate_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"delegate":{"maxLength":36,"format":"character","type":"string","description":"Address of the baker (delegate), which was marked as a contract delegate in the operation"},"contract_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"originated_contract":{"maxLength":36,"format":"character","type":"string","description":"Address of the originated ( deployed / created ) contract"},"balance":{"format":"bigint","type":"integer","description":"Initial contract balance (micro tez), transferred from the operation sender"}},"type":"object"},"proposals":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"period_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `VotingPeriods.Id`.<fk table='VotingPeriods' column='Id'/>"},"voting_period":{"format":"integer","type":"integer","description":"Index of the proposal period for which the proposal was submitted (upvoted)"},"proposal_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Proposals.Id`.<fk table='Proposals' column='Id'/>"},"protocol_proposal":{"maxLength":51,"format":"character","type":"string","description":"Hash of the submitted (upvoted) proposal"},"baker_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"baker":{"maxLength":36,"format":"character","type":"string","description":"Address of the baker (delegate), submitted (upvoted) the proposal operation"},"num_rolls":{"format":"integer","type":"integer","description":"Number of baker's rolls (baker's voting power)"},"is_duplicate":{"format":"boolean","type":"boolean","description":"Indicates whether proposal upvote has already been pushed. Duplicated proposal operations are not counted when selecting proposal-winner."}},"type":"object"},"protocol_proposals":{"description":"Proposals","properties":{"id":{"format":"integer","type":"integer","description":"Note:\nThis is a Primary Key.<pk/>"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the proposal, which representing a tarball of concatenated .ml/.mli source files"},"status":{"format":"text","type":"string","description":"Status of the proposal active - the proposal in the active state accepted - accepted for protocol upgrade proposal skipped - the proposal didn't pass the Proposal Period rejected - the proposal didn't reach a quorum during the Exploration or Promotion Period"},"baker_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"baker":{"maxLength":36,"format":"character","type":"string","description":"Address of the baker (delegate) submitted the proposal"},"total_rolls":{"format":"integer","type":"integer","description":"The total number of rolls of all the bakers (delegates) who upvoted the proposal"},"proposal_period_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `VotingPeriods.Id`.<fk table='VotingPeriods' column='Id'/>"},"exploration_period_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `VotingPeriods.Id`.<fk table='VotingPeriods' column='Id'/>"},"testing_period_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `VotingPeriods.Id`.<fk table='VotingPeriods' column='Id'/>"},"promotion_period_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `VotingPeriods.Id`.<fk table='VotingPeriods' column='Id'/>"}},"type":"object"},"protocols":{"properties":{"code":{"format":"integer","type":"integer","description":"Protocol code, representing a number of protocol changes since genesis (mod 256, but -1 for the genesis block)"},"hash":{"maxLength":51,"format":"character","type":"string"},"first_level":{"format":"integer","type":"integer","description":"Block height where the protocol was applied"},"last_level":{"format":"integer","type":"integer","description":"Block height where the protocol ends. null if the protocol is active"},"preserved_cycles":{"format":"integer","type":"integer"},"blocks_per_cycle":{"format":"integer","type":"integer"},"blocks_per_comitment":{"format":"integer","type":"integer"},"blocks_per_snapshot":{"format":"integer","type":"integer"},"blocks_per_voting":{"format":"integer","type":"integer"},"time_between_blocks":{"format":"integer","type":"integer"},"endorsers_per_block":{"format":"integer","type":"integer"},"hard_operation_gas_limit":{"format":"integer","type":"integer"},"hard_operation_storage_limit":{"format":"integer","type":"integer"},"hard_block_gas_limit":{"format":"integer","type":"integer"},"tokens_per_roll":{"format":"bigint","type":"integer"},"revelation_reward":{"format":"bigint","type":"integer"},"block_deposit":{"format":"bigint","type":"integer"},"block_reward_0":{"format":"bigint","type":"integer"},"block_reward_1":{"format":"bigint","type":"integer"},"endorsement_deposit":{"format":"bigint","type":"integer"},"endorsement_reward_0":{"format":"bigint","type":"integer"},"endorsement_reward_1":{"format":"bigint","type":"integer"},"origination_size":{"format":"integer","type":"integer"},"byte_cost":{"format":"integer","type":"integer"}},"type":"object"},"reveals":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"sender_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"sender":{"maxLength":36,"format":"character","type":"string","description":"Address of the account who has sent the operation"},"counter":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent operation replay"},"baker_fee":{"format":"bigint","type":"integer","description":"Fee to the baker, produced block, in which the operation was included (micro tez)"},"gas_limit":{"format":"integer","type":"integer","description":"A cap on the amount of gas a given operation can consume"},"consumed_gas":{"format":"integer","type":"integer","description":"Amount of gas, consumed by the operation"},"status":{"format":"text","type":"string","description":"(applied - an operation applied by the node and successfully added to the blockchain, failed - an operation which failed with some particular error (not enough balance, gas limit, etc), backtracked - an operation which was successful but reverted due to one of the following operations in the same operation group was failed, skipped - all operations after the failed one in an operation group)"},"errors":{"format":"text","type":"string","description":"List of errors provided by the node, injected the operation to the blockchain. null if there is no errors"}},"type":"object"},"revelation_penalties":{"description":"Operation, in which rewards were lost due to unrevealed seed nonces by the delegate (synthetic type)","properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"baker_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"baker":{"maxLength":36,"format":"character","type":"string","description":"Address of the delegate (baker) who has lost rewards due to unrevealed seed nonces"},"missed_level":{"format":"integer","type":"integer","description":"Height of the block, which contains hash of the seed nonce, which was to be revealed"},"lost_rewards":{"format":"bigint","type":"integer","description":"Reward for baking the block, which was lost due to unrevealed seed nonces (micro tez)"},"lost_fees":{"format":"bigint","type":"integer","description":"Lost due to unrevealed seed nonce total fee paid by all operations, included in the block, which was to be revealed (micro tez)"}},"type":"object"},"rewards":{"description":"Baker rewards/penalties per cycle with breakdown by reward/penalty kind","properties":{"cycle":{"format":"integer","type":"integer","description":"Cycle in which rewards have been or will be earned."},"baker_id":{"format":"integer","type":"integer"},"baker":{"maxLength":36,"format":"character","type":"string","description":"Baker address"},"num_rolls":{"format":"integer","type":"integer"},"staking_balance":{"format":"bigint","type":"integer","description":"Staking balance of the baker at the snapshot time."},"delegated_balance":{"format":"bigint","type":"integer","description":"Balance delegated to the baker at the snapshot time (sum of delegators' balances)."},"num_delegators":{"format":"integer","type":"integer","description":"Number of delegators at the snapshot time."},"num_future_blocks":{"format":"integer","type":"integer","description":"Number of blocks which baker is allowed to produce in this cycle based on future baking rights."},"num_own_blocks":{"format":"integer","type":"integer","description":"Number of successfully baked blocks with priority 0."},"num_extra_blocks":{"format":"integer","type":"integer","description":"Number of successfully baked blocks with priority 1+."},"num_missed_own_blocks":{"format":"integer","type":"integer","description":"Number of blocks which were missed at priority 0 for no apparent reason (usually due to issues with network or node)."},"num_missed_extra_blocks":{"format":"integer","type":"integer","description":"Number of blocks which were missed at priority 1+ for no apparent reason (usually due to issues with network or node)."},"num_uncovered_own_blocks":{"format":"integer","type":"integer","description":"Number of blocks which were missed at priority 0 due to lack of bonds (for example, when a baker is overdelegated)."},"num_uncovered_extra_blocks":{"format":"integer","type":"integer","description":"Number of blocks which were missed at priority 1+ due to lack of bonds (for example, when a baker is overdelegated)."},"num_future_endorsements":{"format":"integer","type":"integer","description":"Number of slots which baker is allowed to validate in this cycle based on future endorsing rights."},"num_endorsements":{"format":"integer","type":"integer","description":"Number of successfully endorsed slots."},"num_missed_endorsements":{"format":"integer","type":"integer","description":"Number of endorsing slots which were missed for no apparent reason (usually due to issues with network or node)."},"num_uncovered_endorsements":{"format":"integer","type":"integer","description":"Number of endorsing slots which were missed due to lack of bonds (for example, when a baker is overdelegated)."},"future_block_rewards":{"format":"bigint","type":"integer","description":"Estimated value of future block rewards."},"own_block_rewards":{"format":"bigint","type":"integer","description":"Rewards received for blocks baked with priority 0."},"extra_block_rewards":{"format":"bigint","type":"integer","description":"Rewards received for blocks baked with priority 1+."},"missed_own_block_rewards":{"format":"bigint","type":"integer","description":"Rewards which were not received due to missing own blocks."},"missed_extra_block_rewards":{"format":"bigint","type":"integer","description":"Rewards which were not received due to missing extra blocks."},"uncovered_own_block_rewards":{"format":"bigint","type":"integer","description":"Rewards which were not received due to missing own blocks due to lack of bonds."},"uncovered_extra_block_rewards":{"format":"bigint","type":"integer","description":"Rewards which were not received due to missing extra blocks due to lack of bonds."},"future_endorsement_rewards":{"format":"bigint","type":"integer","description":"Estimated value of future endorsing rewards."},"endorsement_rewards":{"format":"bigint","type":"integer","description":"Rewards received for endorsed slots."},"missed_endorsement_rewards":{"format":"bigint","type":"integer","description":"Rewards which were not received due to missing endorsements."},"uncovered_endorsement_rewards":{"format":"bigint","type":"integer","description":"Rewards which were not received due to missing endorsements due to lack of bonds."},"own_block_fees":{"format":"bigint","type":"integer","description":"Operation fees which were harvested from successfully baked blocks with priority 0."},"extra_block_fees":{"format":"bigint","type":"integer","description":"Operation fees which were harvested from successfully baked blocks with priority 1+."},"missed_own_block_fees":{"format":"bigint","type":"integer","description":"Operation fees which were not received due to missing own blocks."},"missed_extra_block_fees":{"format":"bigint","type":"integer","description":"Operation fees which were not received due to missing extra blocks."},"uncovered_own_block_fees":{"format":"bigint","type":"integer","description":"Operation fees which were not received due to missing own blocks (due to lack of bonds)."},"uncovered_extra_block_fees":{"format":"bigint","type":"integer","description":"Operation fees which were not received due to missing extra blocks (due to lack of bonds)."},"double_baking_rewards":{"format":"bigint","type":"integer","description":"Rewards for detecting double baking (accusing someone of producing two different blocks at the same level)."},"double_baking_lost_deposits":{"format":"bigint","type":"integer","description":"Bonds lost due to double baking"},"double_baking_lost_rewards":{"format":"bigint","type":"integer","description":"Rewards lost due to double baking"},"double_baking_lost_fees":{"format":"bigint","type":"integer","description":"Fees lost due to double baking"},"double_endorsing_rewards":{"format":"bigint","type":"integer","description":"Rewards for detecting double endorsing (accusing someone of validating two different blocks at the same level)."},"double_endorsing_lost_deposits":{"format":"bigint","type":"integer","description":"Bonds lost due to double endorsing"},"double_endorsing_lost_rewards":{"format":"bigint","type":"integer","description":"Rewards lost due to double endorsing"},"double_endorsing_lost_fees":{"format":"bigint","type":"integer","description":"Fees lost due to double endorsing"},"revelation_rewards":{"format":"bigint","type":"integer","description":"Rewards for including into a block seed nonce revelation operations."},"revelation_lost_rewards":{"format":"bigint","type":"integer","description":"Rewards lost due to missing seed nonce revelation."},"revelation_lost_fees":{"format":"bigint","type":"integer","description":"Fees lost due to missing seed nonce revelation."},"future_block_deposits":{"format":"bigint","type":"integer","description":"Estimated value of bonds which will be locked as security deposit for future blocks."},"block_deposits":{"format":"bigint","type":"integer","description":"Bonds which were locked as a security deposit for baking own and extra blocks."},"future_endorsement_deposits":{"format":"bigint","type":"integer","description":"Estimated value of bonds which will be locked as security deposit for future endorsements."},"endorsement_deposits":{"format":"bigint","type":"integer","description":"Bonds which were locked as a security deposit for endorsed slots."},"expected_blocks":{"format":"double precision","type":"number","description":"Expected value of how many blocks baker should produce based on baker's rolls, total rolls and blocks per cycle."},"expected_endorsements":{"format":"double precision","type":"number","description":"Expected value of how many slots baker should validate based on baker's rolls, total rolls and endorsing slots per cycle."},"total_rewards":{"format":"bigint","type":"integer","description":"Total cycle rewards (positive)"},"total_penalties":{"format":"bigint","type":"integer","description":"Total cycle penalties"}},"type":"object"},"rights":{"properties":{"cycle":{"format":"integer","type":"integer","description":"Cycle on which the right can be realized."},"level":{"format":"integer","type":"integer","description":"Level at which a block must be baked or an endorsement must be sent."},"baker_id":{"format":"integer","type":"integer"},"baker":{"maxLength":36,"format":"character","type":"string","description":"Baker address to which baking or endorsing right has been given."},"type":{"format":"text","type":"string","description":"baking - right to bake (produce) a block;\\nendorsing - right to endorse (validate) a block."},"status":{"format":"text","type":"string","description":"future - the right is not realized yet;\\nrealized - the right was successfully realized;\\nuncovered - the right was not realized due to lack of bonds (for example, when a baker is overdelegated);\\nmissed - the right was not realized for no apparent reason (usually due to issues with network or node)."},"priority":{"format":"integer","type":"integer","description":"Priority (0 - âˆž) with which baker can produce a block. If a baker with priority 0 doesn't produce a block within a given time interval, then the right goes to a baker with priority1, etc. For endorsing rights this field is always null."},"num_slots":{"format":"integer","type":"integer","description":"Number of slots (1 - 32) to be endorsed. For baking rights this field is always null."}},"type":"object"},"summary":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"protocol":{"format":"text","type":"string","description":"Protocol hash"},"next_protocol":{"format":"text","type":"string","description":"Next protocol hash"},"block_hash":{"format":"text","type":"string","description":"Block hash"},"num_accounts":{"format":"integer","type":"integer","description":"Total number of accounts of all types (user, delegate, contract) seen till this block (inclusive)"},"num_protocols":{"format":"integer","type":"integer"},"num_activations":{"format":"integer","type":"integer","description":"Total number of account activations applied till this block (inclusive)"},"num_ballots":{"format":"integer","type":"integer","description":"Total number of ballot operations applied till this block (inclusive)"},"num_delegations":{"format":"integer","type":"integer","description":"Total number of delegation operations applied till this block (inclusive)"},"num_double_bakings":{"format":"integer","type":"integer","description":"Total number of double baking evidences published till this block (inclusive)"},"num_double_endorsings":{"format":"integer","type":"integer","description":"Total number of double endorsing evidences published till this block (inclusive)"},"num_endorsements":{"format":"integer","type":"integer","description":"Total number of endorsements applied till this block (inclusive)"},"num_nonce_revelations":{"format":"integer","type":"integer","description":"Total number of nonce revelations applied till this block (inclusive)"},"num_originations":{"format":"integer","type":"integer","description":"Total number of originations applied till this block (inclusive)"},"num_proposals":{"format":"integer","type":"integer","description":"Total number of proposal operations applied till this block (inclusive)"},"num_reveals":{"format":"integer","type":"integer","description":"Total number of reveal operations applied till this block (inclusive)"},"num_transactions":{"format":"integer","type":"integer","description":"Total number of transactions applied till this block (inclusive)"},"num_migrations":{"format":"integer","type":"integer","description":"Total number of migrations applied till this block (inclusive)"},"num_revelation_penalties":{"format":"integer","type":"integer","description":"Total number of revelation penalties applied till this block (inclusive)"},"num_protocol_proposals":{"format":"integer","type":"integer","description":"Total number of protocol proposals seen till this block (inclusive)"},"num_cycles":{"format":"integer","type":"integer","description":"Total number of cycles"},"xtz_btc":{"format":"double precision","type":"number","description":"XTZ/BTC price"},"xtz_eur":{"format":"double precision","type":"number","description":"XTZ/EUR price"},"quote_level":{"format":"integer","type":"integer","description":"Used in async mode"},"xtz_usd":{"format":"double precision","type":"number","description":"XTZ/USD price"}},"type":"object"},"transactions":{"properties":{"level":{"format":"integer","type":"integer","description":"The height of the block from the genesis block, in which the operation was included\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"timestamp":{"format":"timestamp without time zone","type":"string","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)"},"hash":{"maxLength":51,"format":"character","type":"string","description":"Hash of the operation"},"sender_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"sender":{"maxLength":36,"format":"character","type":"string","description":"Address of the account sent the transaction"},"counter":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent operation replay"},"baker_fee":{"format":"bigint","type":"integer","description":"Fee to the baker, produced block, in which the operation was included (micro tez)"},"storage_burn":{"format":"bigint","type":"integer","description":"The amount of funds burned from the sender account for used the blockchain storage (micro tez)"},"allocation_burn":{"format":"bigint","type":"integer","description":"The amount of funds burned from the sender account for account creation (micro tez)"},"gas_limit":{"format":"integer","type":"integer","description":"A cap on the amount of gas a given operation can consume"},"consumed_gas":{"format":"integer","type":"integer","description":"Amount of gas, consumed by the operation"},"storage_limit":{"format":"integer","type":"integer","description":"A cap on the amount of storage a given operation can consume"},"paid_storage_size_diff":{"format":"integer","type":"integer","description":"Amount of storage, consumed by the operation"},"status":{"format":"text","type":"string","description":"Operation status (applied - an operation applied by the node and successfully added to the blockchain, failed - an operation which failed with some particular error (not enough balance, gas limit, etc), backtracked - an operation which was successful but reverted due to one of the following operations in the same operation group was failed, skipped - all operations after the failed one in an operation group)"},"errors":{"format":"text","type":"string","description":"List of errors provided by the node, injected the operation to the blockchain. null if there is no errors"},"initiator_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"initiator":{"maxLength":36,"format":"character","type":"string","description":"Address of the initiator of the transaction call"},"nonce":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent internal operation replay"},"destination_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"destination":{"maxLength":36,"format":"character","type":"string","description":"Destination address"},"amount":{"format":"bigint","type":"integer","description":"The transaction amount (micro tez)"},"parameters":{"format":"text","type":"string","description":"Parameters/code, passed to the target contract"},"has_internal_delegations":{"format":"boolean","type":"boolean","description":"At least one internal delegation operation"},"has_internal_originations":{"format":"boolean","type":"boolean","description":"At least one internal origination operation"},"has_internal_transactions":{"format":"boolean","type":"boolean","description":"At least one internal transaction operation"}},"type":"object"},"users":{"description":"Implicit accounts (tz) that are not registered as delegates.","properties":{"address":{"maxLength":36,"format":"character","type":"string","description":"Public key hash of the account"},"first_level":{"format":"integer","type":"integer","description":"Block height of the first operation related to the account\n\nNote:\nThis is a Foreign Key to `Blocks.Level`.<fk table='Blocks' column='Level'/>"},"last_level":{"format":"integer","type":"integer","description":"Height of the block in which the account state was changed last time"},"balance":{"format":"bigint","type":"integer","description":"Account balance/Total balance of the delegate (baker), including spendable and frozen funds (micro tez)"},"counter":{"format":"integer","type":"integer","description":"An account nonce which is used to prevent operation replay"},"num_contracts":{"format":"integer","type":"integer","description":"Number of contracts, created (originated) and/or managed by the account"},"num_delegations":{"format":"integer","type":"integer","description":"Number of delegation operations, related to the account"},"num_originations":{"format":"integer","type":"integer","description":"Number of all origination (deployment / contract creation) operations, related to the account"},"num_transactions":{"format":"integer","type":"integer","description":"Number of all transaction (tez transfer) operations, related to the account"},"num_reveals":{"format":"integer","type":"integer","description":"Number of reveal (is used to reveal the public key associated with an account) operations of the contract"},"num_migrations":{"format":"integer","type":"integer","description":"Number of migration (result of the context (database) migration during a protocol update) operations, related to the account (synthetic type)"},"delegate_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `Accounts.Id`.<fk table='Accounts' column='Id'/>"},"delegate":{"maxLength":36,"format":"character","type":"string","description":"Address of the current delegate of the account. null if it's not delegated"},"delegation_level":{"format":"integer","type":"integer","description":"Block height of latest delegation. null if it's not delegated"},"is_staked":{"format":"boolean","type":"boolean","description":"Whether account participates in staking (bakes or delegates)"},"public_key":{"maxLength":55,"format":"character varying","type":"string","description":"Base58 representation of account's public key, revealed by the account"}},"type":"object"},"voting_periods":{"properties":{"code":{"format":"integer","type":"integer"},"kind":{"format":"integer","type":"integer"},"start_level":{"format":"integer","type":"integer"},"end_level":{"format":"integer","type":"integer"},"proposal_id":{"format":"integer","type":"integer"},"total_stake":{"format":"integer","type":"integer"},"participation":{"format":"integer","type":"integer"},"quorum":{"format":"integer","type":"integer"}},"type":"object"},"voting_snapshots":{"properties":{"level":{"format":"integer","type":"integer"},"period_id":{"format":"integer","type":"integer","description":"Note:\nThis is a Foreign Key to `VotingPeriods.Id`.<fk table='VotingPeriods' column='Id'/>"},"voting_period":{"format":"integer","type":"integer"},"delegate_id":{"format":"integer","type":"integer"},"delegate":{"maxLength":36,"format":"character","type":"string"},"num_rolls":{"format":"integer","type":"integer"}},"type":"object"}},"parameters":{"preferParams":{"name":"Prefer","description":"Preference","required":false,"in":"header","type":"string","enum":["params=single-object"]},"preferReturn":{"name":"Prefer","description":"Preference","required":false,"in":"header","type":"string","enum":["return=representation","return=minimal","return=none"]},"preferCount":{"name":"Prefer","description":"Preference","required":false,"in":"header","type":"string","enum":["count=none"]},"select":{"name":"select","description":"Filtering Columns","required":false,"in":"query","type":"string"},"on_conflict":{"name":"on_conflict","description":"On Conflict","required":false,"in":"query","type":"string"},"order":{"name":"order","description":"Ordering","required":false,"in":"query","type":"string"},"range":{"name":"Range","description":"Limiting and Pagination","required":false,"in":"header","type":"string"},"rangeUnit":{"name":"Range-Unit","description":"Limiting and Pagination","required":false,"default":"items","in":"header","type":"string"},"offset":{"name":"offset","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"limit":{"name":"limit","description":"Limiting and Pagination","required":false,"in":"query","type":"string"},"body.activations":{"name":"activations","description":"activations","required":false,"schema":{"$ref":"#/definitions/activations"},"in":"body"},"rowFilter.activations.level":{"name":"level","description":"The height of the block, from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.activations.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.activations.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.activations.account_id":{"name":"account_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.activations.account":{"name":"account","description":"Address of the activated account","required":false,"format":"character","in":"query","type":"string"},"rowFilter.activations.balance":{"name":"balance","description":"Account activation balance of tezos tokens that were recommended allocations for donations to the Tezos Foundationâ€™s fundraiser","required":false,"format":"bigint","in":"query","type":"string"},"body.balance_snapshots":{"name":"balance_snapshots","description":"balance_snapshots","required":false,"schema":{"$ref":"#/definitions/balance_snapshots"},"in":"body"},"rowFilter.balance_snapshots.cycle":{"name":"cycle","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.balance_snapshots.delegator_id":{"name":"delegator_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.balance_snapshots.delegator":{"name":"delegator","required":false,"format":"character","in":"query","type":"string"},"rowFilter.balance_snapshots.baker_id":{"name":"baker_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.balance_snapshots.baker":{"name":"baker","required":false,"format":"character","in":"query","type":"string"},"rowFilter.balance_snapshots.balance":{"name":"balance","required":false,"format":"bigint","in":"query","type":"string"},"body.ballots":{"name":"ballots","description":"ballots","required":false,"schema":{"$ref":"#/definitions/ballots"},"in":"body"},"rowFilter.ballots.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.ballots.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.ballots.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.ballots.period_id":{"name":"period_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.ballots.voting_period":{"name":"voting_period","description":"Index of the voting period for which the ballot was submitted","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.ballots.proposal_id":{"name":"proposal_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.ballots.proposal":{"name":"proposal","description":"Hash of the proposal for which ballot was submitted","required":false,"format":"character","in":"query","type":"string"},"rowFilter.ballots.baker_id":{"name":"baker_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.ballots.baker":{"name":"baker","description":"Information about the delegate (baker), submitted the ballot","required":false,"format":"character","in":"query","type":"string"},"rowFilter.ballots.num_rolls":{"name":"num_rolls","description":"Number of baker's rolls (baker's voting power)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.ballots.vote":{"name":"vote","description":"Vote, given in the ballot (yay, nay, or pass)","required":false,"format":"integer","in":"query","type":"string"},"body.blocks":{"name":"blocks","description":"blocks","required":false,"schema":{"$ref":"#/definitions/blocks"},"in":"body"},"rowFilter.blocks.level":{"name":"level","description":"The height of the block from the genesis block","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.blocks.hash":{"name":"hash","description":"Block hash","required":false,"format":"character","in":"query","type":"string"},"rowFilter.blocks.timestamp":{"name":"timestamp","description":"The datetime at which the block is claimed to have been created (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.blocks.proto_code":{"name":"proto_code","description":"Protocol code, representing a number of protocol changes since genesis (mod 256, but -1 for the genesis block)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.blocks.priority":{"name":"priority","description":"The position in the priority list of delegates at which the block was baked","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.blocks.num_endorsements":{"name":"num_endorsements","description":"Number of endorsements, confirming the block","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.blocks.is_cycle_start":{"name":"is_cycle_start","description":"This is the first block of the cycle","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.is_cycle_end":{"name":"is_cycle_end","description":"This is the last block of the cycle","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.is_protocol_start":{"name":"is_protocol_start","description":"This is the first block of a protocol","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.is_protocol_end":{"name":"is_protocol_end","description":"This is the last block of a protocol","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.is_voting_period_start":{"name":"is_voting_period_start","description":"This is the first block of a voting period","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.is_voring_period_end":{"name":"is_voring_period_end","description":"This is the last block of a voting period","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_deactivations":{"name":"has_deactivations","description":"At least one delegate (baker) was deactivated in this block","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_account_allocations":{"name":"has_account_allocations","description":"At least one account was allocated (via origination, activation, or transaction to a non-existent address) was deactivated in this block","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_smart_contract_interaction":{"name":"has_smart_contract_interaction","description":"In this block a smart-contract (excluding manager.tz) was deployed or invoked.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.is_snapshot":{"name":"is_snapshot","description":"This block was randomly chosen for making a snapshot of balances.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_delegator_contract_interaction":{"name":"has_delegator_contract_interaction","description":"In this block a delegator contract (manager.tz) was deployed or invoked.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_ballots":{"name":"has_ballots","description":"At least one ballot operation was injected in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_proposals":{"name":"has_proposals","description":"At least one proposal operation was injected in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_activations":{"name":"has_activations","description":"At least one activation operation was injected in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_double_bakings":{"name":"has_double_bakings","description":"At least one double baking accusation was injected in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_double_endorsings":{"name":"has_double_endorsings","description":"At least one double endorsement accusation was in during this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_revelations":{"name":"has_revelations","description":"At least one nonce revelation operation was injected in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_transactions":{"name":"has_transactions","description":"At least one transaction operation was injected in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_reveals":{"name":"has_reveals","description":"At least one reveal operation was injected in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_migrations":{"name":"has_migrations","description":"A context migration happened in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.has_revelations_penalties":{"name":"has_revelations_penalties","description":"A penalty for not revealing seed nonce was applied in this block.","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.blocks.reward":{"name":"reward","description":"Reward of the baker for producing the block (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.blocks.fees":{"name":"fees","description":"Total fee paid by all operations, included in the block","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.blocks.baker_id":{"name":"baker_id","description":"Accounts","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.blocks.baker":{"name":"baker","description":"Address of the delegate (baker), produced the block","required":false,"format":"character","in":"query","type":"string"},"rowFilter.blocks.revelation_id":{"name":"revelation_id","required":false,"format":"integer","in":"query","type":"string"},"body.contracts":{"name":"contracts","description":"contracts","required":false,"schema":{"$ref":"#/definitions/contracts"},"in":"body"},"rowFilter.contracts.address":{"name":"address","description":"Public key hash of the account","required":false,"format":"character","in":"query","type":"string"},"rowFilter.contracts.first_level":{"name":"first_level","description":"Block height of the first operation related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.last_level":{"name":"last_level","description":"Height of the block in which the account state was changed last time","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.balance":{"name":"balance","description":"Account balance/Total balance of the delegate (baker), including spendable and frozen funds (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.contracts.counter":{"name":"counter","description":"An account nonce which is used to prevent operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.num_contracts":{"name":"num_contracts","description":"Number of contracts, created (originated) and/or managed by the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.num_delegations":{"name":"num_delegations","description":"Number of delegation operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.num_originations":{"name":"num_originations","description":"Number of all origination (deployment / contract creation) operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.num_transactions":{"name":"num_transactions","description":"Number of all transaction (tez transfer) operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.num_reveals":{"name":"num_reveals","description":"Number of reveal (is used to reveal the public key associated with an account) operations of the contract","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.num_migrations":{"name":"num_migrations","description":"Number of migration (result of the context (database) migration during a protocol update) operations, related to the account (synthetic type)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.delegate_id":{"name":"delegate_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.delegate":{"name":"delegate","description":"Address of the current delegate of the account. null if it's not delegated","required":false,"format":"character","in":"query","type":"string"},"rowFilter.contracts.delegation_level":{"name":"delegation_level","description":"Block height of latest delegation. null if it's not delegated","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.is_staked":{"name":"is_staked","description":"Whether account participates in staking (bakes or delegates)","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.contracts.kind":{"name":"kind","description":"Sub kinds: delegator_contract (aka manager.tz) or smart_contract","required":false,"format":"text","in":"query","type":"string"},"rowFilter.contracts.creator_id":{"name":"creator_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.contracts.creator":{"name":"creator","description":"Address of the account, which has deployed the contract to the blockchain","required":false,"format":"character","in":"query","type":"string"},"rowFilter.contracts.public_key":{"name":"public_key","description":"Base58 representation of account's public key, revealed by the account","required":false,"format":"character varying","in":"query","type":"string"},"body.cycles":{"name":"cycles","description":"cycles","required":false,"schema":{"$ref":"#/definitions/cycles"},"in":"body"},"rowFilter.cycles.index":{"name":"index","description":"Cycle index starting from zero","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.cycles.snapshot_index":{"name":"snapshot_index","description":"Relative index of the snapshot","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.cycles.snapshot_level":{"name":"snapshot_level","description":"Height of the block where the snapshot was taken","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.cycles.total_rolls":{"name":"total_rolls","description":"Total number of rolls involved in baking rights distribution","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.cycles.total_staking":{"name":"total_staking","description":"Total staking balance of all active in this cycle bakers","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.cycles.total_delegated":{"name":"total_delegated","description":"Total balance delegated to active bakers","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.cycles.total_delegators":{"name":"total_delegators","description":"Total number of active bakers' delegators","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.cycles.total_bakers":{"name":"total_bakers","description":"Total number of all active in this cycle bakers","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.cycles.seed":{"name":"seed","description":"Randomly generated seed used by the network for things like baking rights distribution etc.","required":false,"format":"character","in":"query","type":"string"},"body.delegates":{"name":"delegates","description":"delegates","required":false,"schema":{"$ref":"#/definitions/delegates"},"in":"body"},"rowFilter.delegates.address":{"name":"address","description":"Public key hash of the account","required":false,"format":"character","in":"query","type":"string"},"rowFilter.delegates.first_level":{"name":"first_level","description":"Block height of the first operation related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.last_level":{"name":"last_level","description":"Height of the block in which the account state was changed last time","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.balance":{"name":"balance","description":"Account balance/Total balance of the delegate (baker), including spendable and frozen funds (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.delegates.counter":{"name":"counter","description":"An account nonce which is used to prevent operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_contracts":{"name":"num_contracts","description":"Number of contracts, created (originated) and/or managed by the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_delegations":{"name":"num_delegations","description":"Number of delegation operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_originations":{"name":"num_originations","description":"Number of all origination (deployment / contract creation) operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_transactions":{"name":"num_transactions","description":"Number of all transaction (tez transfer) operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_reveals":{"name":"num_reveals","description":"Number of reveal (is used to reveal the public key associated with an account) operations of the contract","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_migrations":{"name":"num_migrations","description":"Number of migration (result of the context (database) migration during a protocol update) operations, related to the account (synthetic type)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.is_staked":{"name":"is_staked","description":"Whether account participates in staking (bakes or delegates)","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.delegates.is_activated":{"name":"is_activated","description":"Delegation status (true - active, false - deactivated)","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.delegates.revealed":{"name":"revealed","description":"Public key revelation status. Unrevealed account can't send manager operation (transaction, origination etc.)","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.delegates.activation_level":{"name":"activation_level","description":"Block height when delegate (baker) was registered as a baker last time","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.deactivation_level":{"name":"deactivation_level","description":"Block height when delegate (baker) was deactivated as a baker because of lack of funds or inactivity","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.frozen_deposits":{"name":"frozen_deposits","description":"Amount of security deposit, currently locked for baked (produced) blocks and (or) given endorsements (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.delegates.frozen_rewards":{"name":"frozen_rewards","description":"Amount of currently frozen baking rewards (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.delegates.frozen_fees":{"name":"frozen_fees","description":"Amount of currently frozen fees paid by operations inside blocks, baked (produced) by the delegate (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.delegates.delegators_count":{"name":"delegators_count","description":"Number of current delegators (accounts, delegated their funds) of the delegate (baker)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.staking_balance":{"name":"staking_balance","description":"Sum of delegate (baker) balance and delegated funds minus frozen rewards (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.delegates.num_blocks":{"name":"num_blocks","description":"Number of baked (validated) blocks all the time by the delegate (baker)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_endorsements":{"name":"num_endorsements","description":"Number of given endorsements (approvals) by the delegate (baker)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_ballots":{"name":"num_ballots","description":"Number of submitted by the delegate ballots during a voting period","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_proposals":{"name":"num_proposals","description":"Number of submitted (upvoted) by the delegate proposals during a proposal period","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_double_bakings":{"name":"num_double_bakings","description":"Number of double baking (baking two different blocks at the same height) evidence operations, included in blocks, baked (validated) by the delegate","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_double_endorsings":{"name":"num_double_endorsings","description":"Number of double endorsement (endorsing two different blocks at the same block height) evidence operations, included in blocks, baked (validated) by the delegate","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_nonce_revelations":{"name":"num_nonce_revelations","description":"Number of seed nonce revelation (are used by the blockchain to create randomness) operations provided by the delegate","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegates.num_revelation_penalties":{"name":"num_revelation_penalties","description":"Number of operations for all time in which rewards were lost due to unrevealed seed nonces by the delegate (synthetic type)","required":false,"format":"integer","in":"query","type":"string"},"body.delegations":{"name":"delegations","description":"delegations","required":false,"schema":{"$ref":"#/definitions/delegations"},"in":"body"},"rowFilter.delegations.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.delegations.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.delegations.sender_id":{"name":"sender_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.sender":{"name":"sender","description":"Address of the delegated account","required":false,"format":"character","in":"query","type":"string"},"rowFilter.delegations.counter":{"name":"counter","description":"An account nonce which is used to prevent operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.baker_fee":{"name":"baker_fee","description":"Fee to a baker, produced block, in which the operation was included","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.delegations.gas_limit":{"name":"gas_limit","description":"A cap on the amount of gas a given operation can consume","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.consumed_gas":{"name":"consumed_gas","description":"Amount of gas, consumed by the operation","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.status":{"name":"status","description":"Operation status (applied - an operation applied by the node and successfully added to the blockchain, failed - an operation which failed with some particular error (not enough balance, gas limit, etc), backtracked - an operation which was successful but reverted due to one of the following operations in the same operation group was failed, skipped - all operations after the failed one in an operation group)","required":false,"format":"text","in":"query","type":"string"},"rowFilter.delegations.errors":{"name":"errors","description":"List of errors provided by the node, which has injected the operation to the blockchain. null if there is no errors","required":false,"format":"text","in":"query","type":"string"},"rowFilter.delegations.initiator_id":{"name":"initiator_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.initiator":{"name":"initiator","description":"Address of the initiator of the delegation contract call","required":false,"format":"character","in":"query","type":"string"},"rowFilter.delegations.nonce":{"name":"nonce","description":"An account nonce which is used to prevent internal operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.delegate_id":{"name":"delegate_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.delegate":{"name":"delegate","description":"Address of the delegate (baker) that accepted the delegation. null if delegate is not specified (undelegation operation)","required":false,"format":"character","in":"query","type":"string"},"rowFilter.delegations.prev_delegate_id":{"name":"prev_delegate_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.delegations.prev_delegate":{"name":"prev_delegate","description":"Address of the previous delegate of the account. null if there is no previous delegate","required":false,"format":"character","in":"query","type":"string"},"body.double_bakings":{"name":"double_bakings","description":"double_bakings","required":false,"schema":{"$ref":"#/definitions/double_bakings"},"in":"body"},"rowFilter.double_bakings.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.double_bakings.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.double_bakings.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.double_bakings.accused_level":{"name":"accused_level","description":"The height of the block from the genesis block, which was double baked","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.double_bakings.accuser_id":{"name":"accuser_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.double_bakings.accuser":{"name":"accuser","description":"Address of the baker (delegate), produced the block, in which the operation was included","required":false,"format":"character","in":"query","type":"string"},"rowFilter.double_bakings.accuser_reward":{"name":"accuser_reward","description":"Reward of the baker (delegate), produced the block, in which the operation was included","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.double_bakings.offender_id":{"name":"offender_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.double_bakings.offender":{"name":"offender","description":"Address of the baker (delegate), accused for producing two different blocks at the same height","required":false,"format":"character","in":"query","type":"string"},"rowFilter.double_bakings.offender_lost_deposits":{"name":"offender_lost_deposits","description":"Amount of frozen security deposit, lost by accused baker (delegate)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.double_bakings.offender_lost_rewards":{"name":"offender_lost_rewards","description":"Amount of frozen rewards, lost by accused baker (delegate)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.double_bakings.offender_lost_fees":{"name":"offender_lost_fees","description":"Amount of frozen fees, lost by accused baker (delegate)","required":false,"format":"bigint","in":"query","type":"string"},"body.double_endorsings":{"name":"double_endorsings","description":"double_endorsings","required":false,"schema":{"$ref":"#/definitions/double_endorsings"},"in":"body"},"rowFilter.double_endorsings.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.double_endorsings.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.double_endorsings.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.double_endorsings.accused_level":{"name":"accused_level","description":"The height of the block from the genesis block, at which double endorsing occurred","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.double_endorsings.accuser_id":{"name":"accuser_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.double_endorsings.accuser":{"name":"accuser","description":"Address of the baker (delegate), produced the block, in which the operation was included","required":false,"format":"character","in":"query","type":"string"},"rowFilter.double_endorsings.accuser_reward":{"name":"accuser_reward","description":"Reward of the baker (delegate), produced the block, in which the operation was included","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.double_endorsings.offender_id":{"name":"offender_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.double_endorsings.offender":{"name":"offender","description":"Address of the baker (delegate), accused for producing two different endorsements at the same height","required":false,"format":"character","in":"query","type":"string"},"rowFilter.double_endorsings.offender_lost_deposits":{"name":"offender_lost_deposits","description":"Amount of frozen security deposit, lost by accused baker (delegate)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.double_endorsings.offender_lost_rewards":{"name":"offender_lost_rewards","description":"Amount of frozen rewards, lost by accused baker (delegate)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.double_endorsings.offender_lost_fees":{"name":"offender_lost_fees","description":"Amount of frozen fees, lost by accused baker (delegate)","required":false,"format":"bigint","in":"query","type":"string"},"body.endorsements":{"name":"endorsements","description":"endorsements","required":false,"schema":{"$ref":"#/definitions/endorsements"},"in":"body"},"rowFilter.endorsements.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.endorsements.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.endorsements.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.endorsements.delegate_id":{"name":"delegate_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.endorsements.delegate":{"name":"delegate","description":"Address of the baker (delegate) who sent the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.endorsements.num_slots":{"name":"num_slots","description":"Number of assigned endorsement slots (out of 32) to the baker (delegate) who sent the operation","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.endorsements.reward":{"name":"reward","description":"Reward of the baker (delegate) for the operation","required":false,"format":"bigint","in":"query","type":"string"},"body.migrations":{"name":"migrations","description":"migrations","required":false,"schema":{"$ref":"#/definitions/migrations"},"in":"body"},"rowFilter.migrations.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.migrations.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.migrations.account_id":{"name":"account_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.migrations.account":{"name":"account","description":"Address of the account whose balance has updated as a result of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.migrations.kind":{"name":"kind","description":"Kind of the migration\\nbootstrap - Balance updates, included in the first block after genesis activate_delegate - registering a new baker (delegator) during protocol migration airdrop - airdrop of 1 micro tez during Babylon protocol upgrade proposal_invoice - invoice for creation a proposal for protocol upgrade","required":false,"format":"text","in":"query","type":"string"},"rowFilter.migrations.balance_change":{"name":"balance_change","description":"The amount for which the operation updated the balance (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"body.nonce_revelations":{"name":"nonce_revelations","description":"nonce_revelations","required":false,"schema":{"$ref":"#/definitions/nonce_revelations"},"in":"body"},"rowFilter.nonce_revelations.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.nonce_revelations.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.nonce_revelations.hash":{"name":"hash","description":"Hash of the operation.","required":false,"format":"character","in":"query","type":"string"},"rowFilter.nonce_revelations.baker_id":{"name":"baker_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.nonce_revelations.baker":{"name":"baker","description":"Address of the delegate (baker), who produced the block with the operation.","required":false,"format":"character","in":"query","type":"string"},"rowFilter.nonce_revelations.sender_id":{"name":"sender_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.nonce_revelations.sender":{"name":"sender","description":"Address of the delegate (baker), who revealed the nonce (sent the operation).","required":false,"format":"character","in":"query","type":"string"},"rowFilter.nonce_revelations.revealed_level":{"name":"revealed_level","description":"Block height of the block, where seed nonce hash is stored.","required":false,"format":"integer","in":"query","type":"string"},"body.originations":{"name":"originations","description":"originations","required":false,"schema":{"$ref":"#/definitions/originations"},"in":"body"},"rowFilter.originations.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.originations.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.originations.sender_id":{"name":"sender_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.sender":{"name":"sender","description":"Address of the account, created a contract","required":false,"format":"character","in":"query","type":"string"},"rowFilter.originations.counter":{"name":"counter","description":"An account nonce which is used to prevent operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.baker_fee":{"name":"baker_fee","description":"Fee to the baker, produced block, in which the operation was included (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.originations.storage_burn":{"name":"storage_burn","description":"The amount of funds burned from the sender account for contract storage in the blockchain (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.originations.allocation_burn":{"name":"allocation_burn","description":"The amount of funds burned from the sender account for contract account creation (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.originations.gas_limit":{"name":"gas_limit","description":"A cap on the amount of gas a given operation can consume","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.consumed_gas":{"name":"consumed_gas","description":"Amount of gas, consumed by the operation","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.storage_limit":{"name":"storage_limit","description":"A cap on the amount of storage a given operation can consume","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.paid_storage_size_diff":{"name":"paid_storage_size_diff","description":"Amount of storage, consumed by the operation, that is subject to pay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.status":{"name":"status","description":"Operation status (applied - an operation applied by the node and successfully added to the blockchain, failed - an operation which failed with some particular error (not enough balance, gas limit, etc), backtracked - an operation which was a successful but reverted due to one of the following operations in the same operation group was failed, skipped - all operations after the failed one in an operation group)","required":false,"format":"text","in":"query","type":"string"},"rowFilter.originations.errors":{"name":"errors","description":"List of errors provided by the node, injected the operation to the blockchain. null if there is no errors","required":false,"format":"text","in":"query","type":"string"},"rowFilter.originations.initiator_id":{"name":"initiator_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.initiator":{"name":"initiator","description":"Address of the initiator of the contract call","required":false,"format":"character","in":"query","type":"string"},"rowFilter.originations.nonce":{"name":"nonce","description":"An account nonce which is used to prevent internal operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.delegate_id":{"name":"delegate_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.delegate":{"name":"delegate","description":"Address of the baker (delegate), which was marked as a contract delegate in the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.originations.contract_id":{"name":"contract_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.originations.originated_contract":{"name":"originated_contract","description":"Address of the originated ( deployed / created ) contract","required":false,"format":"character","in":"query","type":"string"},"rowFilter.originations.balance":{"name":"balance","description":"Initial contract balance (micro tez), transferred from the operation sender","required":false,"format":"bigint","in":"query","type":"string"},"body.proposals":{"name":"proposals","description":"proposals","required":false,"schema":{"$ref":"#/definitions/proposals"},"in":"body"},"rowFilter.proposals.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.proposals.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.proposals.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.proposals.period_id":{"name":"period_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.proposals.voting_period":{"name":"voting_period","description":"Index of the proposal period for which the proposal was submitted (upvoted)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.proposals.proposal_id":{"name":"proposal_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.proposals.protocol_proposal":{"name":"protocol_proposal","description":"Hash of the submitted (upvoted) proposal","required":false,"format":"character","in":"query","type":"string"},"rowFilter.proposals.baker_id":{"name":"baker_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.proposals.baker":{"name":"baker","description":"Address of the baker (delegate), submitted (upvoted) the proposal operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.proposals.num_rolls":{"name":"num_rolls","description":"Number of baker's rolls (baker's voting power)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.proposals.is_duplicate":{"name":"is_duplicate","description":"Indicates whether proposal upvote has already been pushed. Duplicated proposal operations are not counted when selecting proposal-winner.","required":false,"format":"boolean","in":"query","type":"string"},"body.protocol_proposals":{"name":"protocol_proposals","description":"protocol_proposals","required":false,"schema":{"$ref":"#/definitions/protocol_proposals"},"in":"body"},"rowFilter.protocol_proposals.id":{"name":"id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocol_proposals.hash":{"name":"hash","description":"Hash of the proposal, which representing a tarball of concatenated .ml/.mli source files","required":false,"format":"character","in":"query","type":"string"},"rowFilter.protocol_proposals.status":{"name":"status","description":"Status of the proposal active - the proposal in the active state accepted - accepted for protocol upgrade proposal skipped - the proposal didn't pass the Proposal Period rejected - the proposal didn't reach a quorum during the Exploration or Promotion Period","required":false,"format":"text","in":"query","type":"string"},"rowFilter.protocol_proposals.baker_id":{"name":"baker_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocol_proposals.baker":{"name":"baker","description":"Address of the baker (delegate) submitted the proposal","required":false,"format":"character","in":"query","type":"string"},"rowFilter.protocol_proposals.total_rolls":{"name":"total_rolls","description":"The total number of rolls of all the bakers (delegates) who upvoted the proposal","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocol_proposals.proposal_period_id":{"name":"proposal_period_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocol_proposals.exploration_period_id":{"name":"exploration_period_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocol_proposals.testing_period_id":{"name":"testing_period_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocol_proposals.promotion_period_id":{"name":"promotion_period_id","required":false,"format":"integer","in":"query","type":"string"},"body.protocols":{"name":"protocols","description":"protocols","required":false,"schema":{"$ref":"#/definitions/protocols"},"in":"body"},"rowFilter.protocols.code":{"name":"code","description":"Protocol code, representing a number of protocol changes since genesis (mod 256, but -1 for the genesis block)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.hash":{"name":"hash","required":false,"format":"character","in":"query","type":"string"},"rowFilter.protocols.first_level":{"name":"first_level","description":"Block height where the protocol was applied","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.last_level":{"name":"last_level","description":"Block height where the protocol ends. null if the protocol is active","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.preserved_cycles":{"name":"preserved_cycles","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.blocks_per_cycle":{"name":"blocks_per_cycle","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.blocks_per_comitment":{"name":"blocks_per_comitment","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.blocks_per_snapshot":{"name":"blocks_per_snapshot","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.blocks_per_voting":{"name":"blocks_per_voting","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.time_between_blocks":{"name":"time_between_blocks","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.endorsers_per_block":{"name":"endorsers_per_block","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.hard_operation_gas_limit":{"name":"hard_operation_gas_limit","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.hard_operation_storage_limit":{"name":"hard_operation_storage_limit","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.hard_block_gas_limit":{"name":"hard_block_gas_limit","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.tokens_per_roll":{"name":"tokens_per_roll","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.protocols.revelation_reward":{"name":"revelation_reward","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.protocols.block_deposit":{"name":"block_deposit","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.protocols.block_reward_0":{"name":"block_reward_0","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.protocols.block_reward_1":{"name":"block_reward_1","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.protocols.endorsement_deposit":{"name":"endorsement_deposit","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.protocols.endorsement_reward_0":{"name":"endorsement_reward_0","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.protocols.endorsement_reward_1":{"name":"endorsement_reward_1","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.protocols.origination_size":{"name":"origination_size","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.protocols.byte_cost":{"name":"byte_cost","required":false,"format":"integer","in":"query","type":"string"},"body.reveals":{"name":"reveals","description":"reveals","required":false,"schema":{"$ref":"#/definitions/reveals"},"in":"body"},"rowFilter.reveals.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.reveals.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.reveals.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.reveals.sender_id":{"name":"sender_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.reveals.sender":{"name":"sender","description":"Address of the account who has sent the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.reveals.counter":{"name":"counter","description":"An account nonce which is used to prevent operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.reveals.baker_fee":{"name":"baker_fee","description":"Fee to the baker, produced block, in which the operation was included (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.reveals.gas_limit":{"name":"gas_limit","description":"A cap on the amount of gas a given operation can consume","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.reveals.consumed_gas":{"name":"consumed_gas","description":"Amount of gas, consumed by the operation","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.reveals.status":{"name":"status","description":"(applied - an operation applied by the node and successfully added to the blockchain, failed - an operation which failed with some particular error (not enough balance, gas limit, etc), backtracked - an operation which was successful but reverted due to one of the following operations in the same operation group was failed, skipped - all operations after the failed one in an operation group)","required":false,"format":"text","in":"query","type":"string"},"rowFilter.reveals.errors":{"name":"errors","description":"List of errors provided by the node, injected the operation to the blockchain. null if there is no errors","required":false,"format":"text","in":"query","type":"string"},"body.revelation_penalties":{"name":"revelation_penalties","description":"revelation_penalties","required":false,"schema":{"$ref":"#/definitions/revelation_penalties"},"in":"body"},"rowFilter.revelation_penalties.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.revelation_penalties.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.revelation_penalties.baker_id":{"name":"baker_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.revelation_penalties.baker":{"name":"baker","description":"Address of the delegate (baker) who has lost rewards due to unrevealed seed nonces","required":false,"format":"character","in":"query","type":"string"},"rowFilter.revelation_penalties.missed_level":{"name":"missed_level","description":"Height of the block, which contains hash of the seed nonce, which was to be revealed","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.revelation_penalties.lost_rewards":{"name":"lost_rewards","description":"Reward for baking the block, which was lost due to unrevealed seed nonces (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.revelation_penalties.lost_fees":{"name":"lost_fees","description":"Lost due to unrevealed seed nonce total fee paid by all operations, included in the block, which was to be revealed (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"body.rewards":{"name":"rewards","description":"rewards","required":false,"schema":{"$ref":"#/definitions/rewards"},"in":"body"},"rowFilter.rewards.cycle":{"name":"cycle","description":"Cycle in which rewards have been or will be earned.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.baker_id":{"name":"baker_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.baker":{"name":"baker","description":"Baker address","required":false,"format":"character","in":"query","type":"string"},"rowFilter.rewards.num_rolls":{"name":"num_rolls","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.staking_balance":{"name":"staking_balance","description":"Staking balance of the baker at the snapshot time.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.delegated_balance":{"name":"delegated_balance","description":"Balance delegated to the baker at the snapshot time (sum of delegators' balances).","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.num_delegators":{"name":"num_delegators","description":"Number of delegators at the snapshot time.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_future_blocks":{"name":"num_future_blocks","description":"Number of blocks which baker is allowed to produce in this cycle based on future baking rights.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_own_blocks":{"name":"num_own_blocks","description":"Number of successfully baked blocks with priority 0.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_extra_blocks":{"name":"num_extra_blocks","description":"Number of successfully baked blocks with priority 1+.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_missed_own_blocks":{"name":"num_missed_own_blocks","description":"Number of blocks which were missed at priority 0 for no apparent reason (usually due to issues with network or node).","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_missed_extra_blocks":{"name":"num_missed_extra_blocks","description":"Number of blocks which were missed at priority 1+ for no apparent reason (usually due to issues with network or node).","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_uncovered_own_blocks":{"name":"num_uncovered_own_blocks","description":"Number of blocks which were missed at priority 0 due to lack of bonds (for example, when a baker is overdelegated).","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_uncovered_extra_blocks":{"name":"num_uncovered_extra_blocks","description":"Number of blocks which were missed at priority 1+ due to lack of bonds (for example, when a baker is overdelegated).","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_future_endorsements":{"name":"num_future_endorsements","description":"Number of slots which baker is allowed to validate in this cycle based on future endorsing rights.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_endorsements":{"name":"num_endorsements","description":"Number of successfully endorsed slots.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_missed_endorsements":{"name":"num_missed_endorsements","description":"Number of endorsing slots which were missed for no apparent reason (usually due to issues with network or node).","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.num_uncovered_endorsements":{"name":"num_uncovered_endorsements","description":"Number of endorsing slots which were missed due to lack of bonds (for example, when a baker is overdelegated).","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rewards.future_block_rewards":{"name":"future_block_rewards","description":"Estimated value of future block rewards.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.own_block_rewards":{"name":"own_block_rewards","description":"Rewards received for blocks baked with priority 0.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.extra_block_rewards":{"name":"extra_block_rewards","description":"Rewards received for blocks baked with priority 1+.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.missed_own_block_rewards":{"name":"missed_own_block_rewards","description":"Rewards which were not received due to missing own blocks.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.missed_extra_block_rewards":{"name":"missed_extra_block_rewards","description":"Rewards which were not received due to missing extra blocks.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.uncovered_own_block_rewards":{"name":"uncovered_own_block_rewards","description":"Rewards which were not received due to missing own blocks due to lack of bonds.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.uncovered_extra_block_rewards":{"name":"uncovered_extra_block_rewards","description":"Rewards which were not received due to missing extra blocks due to lack of bonds.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.future_endorsement_rewards":{"name":"future_endorsement_rewards","description":"Estimated value of future endorsing rewards.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.endorsement_rewards":{"name":"endorsement_rewards","description":"Rewards received for endorsed slots.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.missed_endorsement_rewards":{"name":"missed_endorsement_rewards","description":"Rewards which were not received due to missing endorsements.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.uncovered_endorsement_rewards":{"name":"uncovered_endorsement_rewards","description":"Rewards which were not received due to missing endorsements due to lack of bonds.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.own_block_fees":{"name":"own_block_fees","description":"Operation fees which were harvested from successfully baked blocks with priority 0.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.extra_block_fees":{"name":"extra_block_fees","description":"Operation fees which were harvested from successfully baked blocks with priority 1+.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.missed_own_block_fees":{"name":"missed_own_block_fees","description":"Operation fees which were not received due to missing own blocks.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.missed_extra_block_fees":{"name":"missed_extra_block_fees","description":"Operation fees which were not received due to missing extra blocks.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.uncovered_own_block_fees":{"name":"uncovered_own_block_fees","description":"Operation fees which were not received due to missing own blocks (due to lack of bonds).","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.uncovered_extra_block_fees":{"name":"uncovered_extra_block_fees","description":"Operation fees which were not received due to missing extra blocks (due to lack of bonds).","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.double_baking_rewards":{"name":"double_baking_rewards","description":"Rewards for detecting double baking (accusing someone of producing two different blocks at the same level).","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.double_baking_lost_deposits":{"name":"double_baking_lost_deposits","description":"Bonds lost due to double baking","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.double_baking_lost_rewards":{"name":"double_baking_lost_rewards","description":"Rewards lost due to double baking","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.double_baking_lost_fees":{"name":"double_baking_lost_fees","description":"Fees lost due to double baking","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.double_endorsing_rewards":{"name":"double_endorsing_rewards","description":"Rewards for detecting double endorsing (accusing someone of validating two different blocks at the same level).","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.double_endorsing_lost_deposits":{"name":"double_endorsing_lost_deposits","description":"Bonds lost due to double endorsing","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.double_endorsing_lost_rewards":{"name":"double_endorsing_lost_rewards","description":"Rewards lost due to double endorsing","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.double_endorsing_lost_fees":{"name":"double_endorsing_lost_fees","description":"Fees lost due to double endorsing","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.revelation_rewards":{"name":"revelation_rewards","description":"Rewards for including into a block seed nonce revelation operations.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.revelation_lost_rewards":{"name":"revelation_lost_rewards","description":"Rewards lost due to missing seed nonce revelation.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.revelation_lost_fees":{"name":"revelation_lost_fees","description":"Fees lost due to missing seed nonce revelation.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.future_block_deposits":{"name":"future_block_deposits","description":"Estimated value of bonds which will be locked as security deposit for future blocks.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.block_deposits":{"name":"block_deposits","description":"Bonds which were locked as a security deposit for baking own and extra blocks.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.future_endorsement_deposits":{"name":"future_endorsement_deposits","description":"Estimated value of bonds which will be locked as security deposit for future endorsements.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.endorsement_deposits":{"name":"endorsement_deposits","description":"Bonds which were locked as a security deposit for endorsed slots.","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.expected_blocks":{"name":"expected_blocks","description":"Expected value of how many blocks baker should produce based on baker's rolls, total rolls and blocks per cycle.","required":false,"format":"double precision","in":"query","type":"string"},"rowFilter.rewards.expected_endorsements":{"name":"expected_endorsements","description":"Expected value of how many slots baker should validate based on baker's rolls, total rolls and endorsing slots per cycle.","required":false,"format":"double precision","in":"query","type":"string"},"rowFilter.rewards.total_rewards":{"name":"total_rewards","description":"Total cycle rewards (positive)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.rewards.total_penalties":{"name":"total_penalties","description":"Total cycle penalties","required":false,"format":"bigint","in":"query","type":"string"},"body.rights":{"name":"rights","description":"rights","required":false,"schema":{"$ref":"#/definitions/rights"},"in":"body"},"rowFilter.rights.cycle":{"name":"cycle","description":"Cycle on which the right can be realized.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rights.level":{"name":"level","description":"Level at which a block must be baked or an endorsement must be sent.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rights.baker_id":{"name":"baker_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rights.baker":{"name":"baker","description":"Baker address to which baking or endorsing right has been given.","required":false,"format":"character","in":"query","type":"string"},"rowFilter.rights.type":{"name":"type","description":"baking - right to bake (produce) a block;\\nendorsing - right to endorse (validate) a block.","required":false,"format":"text","in":"query","type":"string"},"rowFilter.rights.status":{"name":"status","description":"future - the right is not realized yet;\\nrealized - the right was successfully realized;\\nuncovered - the right was not realized due to lack of bonds (for example, when a baker is overdelegated);\\nmissed - the right was not realized for no apparent reason (usually due to issues with network or node).","required":false,"format":"text","in":"query","type":"string"},"rowFilter.rights.priority":{"name":"priority","description":"Priority (0 - âˆž) with which baker can produce a block. If a baker with priority 0 doesn't produce a block within a given time interval, then the right goes to a baker with priority1, etc. For endorsing rights this field is always null.","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.rights.num_slots":{"name":"num_slots","description":"Number of slots (1 - 32) to be endorsed. For baking rights this field is always null.","required":false,"format":"integer","in":"query","type":"string"},"body.summary":{"name":"summary","description":"summary","required":false,"schema":{"$ref":"#/definitions/summary"},"in":"body"},"rowFilter.summary.level":{"name":"level","description":"The height of the block","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.timestamp":{"name":"timestamp","description":"Datetime of the block (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.summary.protocol":{"name":"protocol","description":"Protocol hash","required":false,"format":"text","in":"query","type":"string"},"rowFilter.summary.next_protocol":{"name":"next_protocol","description":"Next protocol hash","required":false,"format":"text","in":"query","type":"string"},"rowFilter.summary.block_hash":{"name":"block_hash","description":"Block hash","required":false,"format":"text","in":"query","type":"string"},"rowFilter.summary.num_accounts":{"name":"num_accounts","description":"Total number of accounts of all types (user, delegate, contract) seen till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_protocols":{"name":"num_protocols","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_activations":{"name":"num_activations","description":"Total number of account activations applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_ballots":{"name":"num_ballots","description":"Total number of ballot operations applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_delegations":{"name":"num_delegations","description":"Total number of delegation operations applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_double_bakings":{"name":"num_double_bakings","description":"Total number of double baking evidences published till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_double_endorsings":{"name":"num_double_endorsings","description":"Total number of double endorsing evidences published till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_endorsements":{"name":"num_endorsements","description":"Total number of endorsements applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_nonce_revelations":{"name":"num_nonce_revelations","description":"Total number of nonce revelations applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_originations":{"name":"num_originations","description":"Total number of originations applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_proposals":{"name":"num_proposals","description":"Total number of proposal operations applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_reveals":{"name":"num_reveals","description":"Total number of reveal operations applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_transactions":{"name":"num_transactions","description":"Total number of transactions applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_migrations":{"name":"num_migrations","description":"Total number of migrations applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_revelation_penalties":{"name":"num_revelation_penalties","description":"Total number of revelation penalties applied till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_protocol_proposals":{"name":"num_protocol_proposals","description":"Total number of protocol proposals seen till this block (inclusive)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.num_cycles":{"name":"num_cycles","description":"Total number of cycles","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.xtz_btc":{"name":"xtz_btc","description":"XTZ/BTC price","required":false,"format":"double precision","in":"query","type":"string"},"rowFilter.summary.xtz_eur":{"name":"xtz_eur","description":"XTZ/EUR price","required":false,"format":"double precision","in":"query","type":"string"},"rowFilter.summary.quote_level":{"name":"quote_level","description":"Used in async mode","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.summary.xtz_usd":{"name":"xtz_usd","description":"XTZ/USD price","required":false,"format":"double precision","in":"query","type":"string"},"body.transactions":{"name":"transactions","description":"transactions","required":false,"schema":{"$ref":"#/definitions/transactions"},"in":"body"},"rowFilter.transactions.level":{"name":"level","description":"The height of the block from the genesis block, in which the operation was included","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.timestamp":{"name":"timestamp","description":"Datetime of the block, in which the operation was included (ISO 8601, e.g. 2020-02-20T02:40:57Z)","required":false,"format":"timestamp without time zone","in":"query","type":"string"},"rowFilter.transactions.hash":{"name":"hash","description":"Hash of the operation","required":false,"format":"character","in":"query","type":"string"},"rowFilter.transactions.sender_id":{"name":"sender_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.sender":{"name":"sender","description":"Address of the account sent the transaction","required":false,"format":"character","in":"query","type":"string"},"rowFilter.transactions.counter":{"name":"counter","description":"An account nonce which is used to prevent operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.baker_fee":{"name":"baker_fee","description":"Fee to the baker, produced block, in which the operation was included (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.transactions.storage_burn":{"name":"storage_burn","description":"The amount of funds burned from the sender account for used the blockchain storage (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.transactions.allocation_burn":{"name":"allocation_burn","description":"The amount of funds burned from the sender account for account creation (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.transactions.gas_limit":{"name":"gas_limit","description":"A cap on the amount of gas a given operation can consume","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.consumed_gas":{"name":"consumed_gas","description":"Amount of gas, consumed by the operation","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.storage_limit":{"name":"storage_limit","description":"A cap on the amount of storage a given operation can consume","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.paid_storage_size_diff":{"name":"paid_storage_size_diff","description":"Amount of storage, consumed by the operation","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.status":{"name":"status","description":"Operation status (applied - an operation applied by the node and successfully added to the blockchain, failed - an operation which failed with some particular error (not enough balance, gas limit, etc), backtracked - an operation which was successful but reverted due to one of the following operations in the same operation group was failed, skipped - all operations after the failed one in an operation group)","required":false,"format":"text","in":"query","type":"string"},"rowFilter.transactions.errors":{"name":"errors","description":"List of errors provided by the node, injected the operation to the blockchain. null if there is no errors","required":false,"format":"text","in":"query","type":"string"},"rowFilter.transactions.initiator_id":{"name":"initiator_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.initiator":{"name":"initiator","description":"Address of the initiator of the transaction call","required":false,"format":"character","in":"query","type":"string"},"rowFilter.transactions.nonce":{"name":"nonce","description":"An account nonce which is used to prevent internal operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.destination_id":{"name":"destination_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.transactions.destination":{"name":"destination","description":"Destination address","required":false,"format":"character","in":"query","type":"string"},"rowFilter.transactions.amount":{"name":"amount","description":"The transaction amount (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.transactions.parameters":{"name":"parameters","description":"Parameters/code, passed to the target contract","required":false,"format":"text","in":"query","type":"string"},"rowFilter.transactions.has_internal_delegations":{"name":"has_internal_delegations","description":"At least one internal delegation operation","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.transactions.has_internal_originations":{"name":"has_internal_originations","description":"At least one internal origination operation","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.transactions.has_internal_transactions":{"name":"has_internal_transactions","description":"At least one internal transaction operation","required":false,"format":"boolean","in":"query","type":"string"},"body.users":{"name":"users","description":"users","required":false,"schema":{"$ref":"#/definitions/users"},"in":"body"},"rowFilter.users.address":{"name":"address","description":"Public key hash of the account","required":false,"format":"character","in":"query","type":"string"},"rowFilter.users.first_level":{"name":"first_level","description":"Block height of the first operation related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.last_level":{"name":"last_level","description":"Height of the block in which the account state was changed last time","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.balance":{"name":"balance","description":"Account balance/Total balance of the delegate (baker), including spendable and frozen funds (micro tez)","required":false,"format":"bigint","in":"query","type":"string"},"rowFilter.users.counter":{"name":"counter","description":"An account nonce which is used to prevent operation replay","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.num_contracts":{"name":"num_contracts","description":"Number of contracts, created (originated) and/or managed by the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.num_delegations":{"name":"num_delegations","description":"Number of delegation operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.num_originations":{"name":"num_originations","description":"Number of all origination (deployment / contract creation) operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.num_transactions":{"name":"num_transactions","description":"Number of all transaction (tez transfer) operations, related to the account","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.num_reveals":{"name":"num_reveals","description":"Number of reveal (is used to reveal the public key associated with an account) operations of the contract","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.num_migrations":{"name":"num_migrations","description":"Number of migration (result of the context (database) migration during a protocol update) operations, related to the account (synthetic type)","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.delegate_id":{"name":"delegate_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.delegate":{"name":"delegate","description":"Address of the current delegate of the account. null if it's not delegated","required":false,"format":"character","in":"query","type":"string"},"rowFilter.users.delegation_level":{"name":"delegation_level","description":"Block height of latest delegation. null if it's not delegated","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.users.is_staked":{"name":"is_staked","description":"Whether account participates in staking (bakes or delegates)","required":false,"format":"boolean","in":"query","type":"string"},"rowFilter.users.public_key":{"name":"public_key","description":"Base58 representation of account's public key, revealed by the account","required":false,"format":"character varying","in":"query","type":"string"},"body.voting_periods":{"name":"voting_periods","description":"voting_periods","required":false,"schema":{"$ref":"#/definitions/voting_periods"},"in":"body"},"rowFilter.voting_periods.code":{"name":"code","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_periods.kind":{"name":"kind","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_periods.start_level":{"name":"start_level","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_periods.end_level":{"name":"end_level","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_periods.proposal_id":{"name":"proposal_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_periods.total_stake":{"name":"total_stake","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_periods.participation":{"name":"participation","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_periods.quorum":{"name":"quorum","required":false,"format":"integer","in":"query","type":"string"},"body.voting_snapshots":{"name":"voting_snapshots","description":"voting_snapshots","required":false,"schema":{"$ref":"#/definitions/voting_snapshots"},"in":"body"},"rowFilter.voting_snapshots.level":{"name":"level","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_snapshots.period_id":{"name":"period_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_snapshots.voting_period":{"name":"voting_period","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_snapshots.delegate_id":{"name":"delegate_id","required":false,"format":"integer","in":"query","type":"string"},"rowFilter.voting_snapshots.delegate":{"name":"delegate","required":false,"format":"character","in":"query","type":"string"},"rowFilter.voting_snapshots.num_rolls":{"name":"num_rolls","required":false,"format":"integer","in":"query","type":"string"}},"externalDocs":{"url":"https://postgrest.org/en/v7.0/api.html","description":"PostgREST Documentation"}}